{"version":3,"sources":["logo.svg","components/graphics/PlotCanvas.js","components/ui/NavBar.js","components/ui/FromTo.js","components/ui/EquationInput.js","components/ui/SlideInput.js","components/graphics/PlyLoader.js","components/ui/PlyInput.js","components/ui/InputPanel.js","components/graphics/compile.js","components/graphics/primitive.js","components/graphics/setting_comp/SimpleSlider.js","components/graphics/setting_comp/Tab.js","components/graphics/setting_comp/MainTab.js","components/graphics/PlotSpaceSetting.js","components/graphics/PlotSpace.js","App.js","index.js","components/math/math.js","components/math/symbol1.js"],"names":["module","exports","PlotCanvas","props","w_frac","status","is2D","x_center","y_center","z_center","x_step","y_step","num","multiple","state","canvas","React","createRef","controls","fix","clicked","lastX","lastY","lastTime","Date","getTime","x","y","this","isOut","e","translate_view_by","pageX","pageY","updateDimensions","height","current","width","RTPY","RTPX","px_center","Math","ceil","py_center","top","bottom","left","right","ctx","getContext","ctxI","getInfo2D","translate","lineWidth","beginPath","moveTo","lineTo","stroke","label_p","start_p","count","abs","textwidth","measureText","toFixed","toString","fillText","toExponential","window","innerHeight","innerWidth","draw2DGrid","draw","inf","i","inputs","length","input","visible","type","fp","strokeStyle","color","Symbol","draw2D","getValueArray","parm","addEventListener","bind","removeEventListener","modifyStep","deltaY","zoom","style","position","defaultValue","className","onClick","ref","onMouseDown","onMouseUp","onMouseMove","onMouseOut","onWheel","Component","PorpTypes","array","isRequired","func","NavBar","toggletwoD3D","dimState","toggleDim","twoD3D","headerStyle","logoStyle","src","Logo","alt","background","textAlign","padding","margin","fontSize","alignment","FromTo","passChange","name","min","value","max","onChange","EquationInput","par","update","updateEquation","id","text_box","color_picker","parametricChange","addSlider","removeInput","setState","slider_buttons","sliders","my_pointer","map","key","nextId","parametric_thing","indexOf","push","u","v","showParameter","error","SlideInput","show_range","dum","tick","isIncrease","parseFloat","slider","step","changeSlider","animating","timer","setInterval","clearInterval","toggle_minmax","startAnimation","handleChange","handleMinMax","PlyLoader","str","index","description","nextLine","things","split","nextLin","substring","elements","parseInt","Number","isNaN","element","property","go","first","second","console","vertices","indices","j","stride","ind","getIndexOf","log","vertices_with_normal","vec1","vec2","i1","i2","i3","i4","i5","i6","i7","i8","i9","normals","Array","fill","a","Vec3","cross","z","l","k","textured","start","ret_str","trim","PlyInput","loaded","show_color","loadFile","preventDefault","input_file","input_ref","files","undefined","data","reader","FileReader","thisPointer","loadend","onload","target","result","obj","updateFile","readAsText","toggleLoad","color_ref","onclick","onSubmit","passColor","InputPanel","mainDiv","initShader","gl","vertexShader","fragmentShader","vertexShdr","createShader","VERTEX_SHADER","shaderSource","compileShader","shdr_comp_res","getShaderParameter","COMPILE_STATUS","fragShdr","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","getShaderInfoLog","FilledShape3D","setting","initialized","init","vArray","centroid","no_indices","num_face","createVertexArray","bindVertexArray","vBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","coords","STATIC_DRAW","vertexAttribPointer","text_cord_loc","FLOAT","enableVertexAttribArray","coordinate_loc","nvp","texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","UNSIGNED_BYTE","Uint8Array","model_mat","Mat4f","numVert","useProgram","uniformMatrix4fv","model_loc","content","proj_loc","proj_mat","view_loc","cam","mat","drawArrays","TRIANGLE_FAN","axis","angle","getAttribLocation","tex_cord_loc","getUniformLocation","get_textured_cube","settings","Uint16Array","tex_cords","cord_set","setting_to_send","disp","FilledShape2D","RGB","Mat3f","uniformMatrix3fv","Grid3D","bound","lines","addLineX","addLineY","addLineZ","color_loc","coord_loc","cord_loc","render","arr","offset","LINES","GLStuffs","getVertexBufferFor","getError","NO_ERROR","getIndexBufferFor","iBuffer","ELEMENT_ARRAY_BUFFER","ColoredSurface3D","isInit","normal_loc","size","deleteBuffer","uniform4fv","uniform3fv","light_loc","light_pos","light_color_loc","light_color","cam_pos","toArray","ambience_loc","ambience","shininess_loc","shininess","diffusion_loc","diffusion","uniform1f","glossiness_loc","glossiness","s_refl_c_loc","specular_coefficient","drawElements","TRIANGLES","UNSIGNED_SHORT","deleteVertexArray","TexturedSurface3D","SimpleSlider","val","Tab","handleSlider","funct","near","far","htmlFor","dict","Object","assign","getThings","MainTab","changeTab","PlotSpaceSetting","changePrespective","p","prespective","parent","getPres","render3D","changePrespectiveAOV","prespectiveaov","getPresSymmetric","aspect","aov","changeOrtho","orthographic","getOrtho","changeCamera","camera","targetx","targety","targetz","positionx","positiony","positionz","up","upx","upy","upz","Cam","changeCameraAngle","cameraAngle","PI","pitch","roll","yaw","changeLightPos","lightPos","changeLightColor","lightColor","changeDiffusion","changeShininess","changeConstants","Constants","alpha","is_main","is_visible","orthosymmetric","half_len","R","G","B","Glossiness","SpecularCoefficient","Alpha","maintabs","which","is_ortho","setCamera","setMatrix","show_axis","toggleInput","goBackToMain","toggleAxis","toggleViewType","PlotSpace","z_step","objects","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","grid","object3D","get3DMesh","getColor","object","getOrthoSymmetric","a_canvas","set","dx","dy","rotateX","rotateZ","clearDepth","substr","viewport","clearColor","enable","DEPTH_TEST","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","onKeyDown","b","n","r","t","f","random","dispTarget","App","getPositionOfInput","input_id","pos","new_value","new_min","new_max","newSlider","splice","canvas_ref","h_frac","input_visible","rightSectionStyle","float","added_slider","addEquation","newEquation","replace","text","getJSFunction","getAppropriateSliders","sliderscopy","from","deleteData","filter","is3D","toggle_input","file","addFile","drawn","unshift","u_id","document","body","passive","ReactDOM","getElementById","negate","add","ret","sub","magnitude","sqrt","normalize","mag","scaler_multiply","multiply","other","temp","res","getNull","getTranslate","tx","ty","mat3","getRotate","cos_val","cos","sin_val","sin","getShear","shx","shy","multiplyVec4","vec","printToCosole","process","stdout","write","getScale","sx","sy","sz","Quaternion","get_mat","getRotateX","getRotateY","getRotateZ","tan","h","m","rot_mat","new_vec","s","rot_mats","rotateY","fac","t_m","createMatrix","qx","qy","qz","qw","qx2","qy2","qz2","insertMultiply","expression","draw2DExplicit","draw2DParametric","draw2DUsingTracing","expliciton","x_index","const_y","lx","ly","y_index","const_x","val_x","fx","val_y","fy","t_index_x","t_index_y","arc","fillStyle","expl_checker","toLowerCase","splitedExpressions","fzp","getFunction","fz","concat","fxp","fyp","Set","isExplicitOn","search","variables","what","match","RegExp","fn","prev_alpha","char","func_str","sort","eval","draw2DUsingSecant","x_ind","y_ind","threshold","c","fa","fb","draw2DUsingAdaptiveTracing","del","q_step","pointAlgorithm","trace","slope","vx","vy","reverse","F","Fx","Fy","Fac","psx","psy","osx","osy","angle_of_rotation","fillRect","v_count","acos","get3DMeshForExplicit","get3DMeshForParametric","v1","v1del","v3","v1_ind","v2_ind","ret_arr","getIndicesFor","x_u_index","x_v_index","y_u_index","y_v_index","z_u_index","z_v_index","u_step","v_step","u_del","v_del","c_x","c_y","c_z","dr_du","dr_dv","val_z"],"mappings":"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","file":"static/js/main.9e42cbc4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.1ca2b67d.svg\";","import React, { Component } from 'react';\nimport Symbol from '../math/symbol1'\nimport PorpTypes from 'prop-types'\n\nconst h_frac = 0.95;\nvar x_step_p = 20;\nvar y_step_p = 20;\n\nclass PlotCanvas extends Component {\n    w_frac = 0.80;\n    status = {\n        //Will be in real Coordinate\n        is2D: true,\n        x_center: 0,\n        y_center: 0,\n        z_center: 0,\n    \n        x_step: 0.4,\n        y_step: 0.4,\n        num:4,\n        multiple:0.1,\n    }\n    state={};\n\n    translate_view_by(x,y){\n        this.status.x_center += x*this.status.x_step/x_step_p;\n        this.status.y_center += y*this.status.y_step/y_step_p;\n    }\n\n    modifyStep(isOut){\n        switch(this.status.num){\n        case 1:\n            if(isOut){\n                this.status.num = 2;\n            }else{\n                this.status.num = 8;\n                this.status.multiple /=10;\n            }\n        break;\n        case 2:\n            this.status.num = isOut?4:1;\n        break;\n        case 4:\n            this.status.num = isOut?5:2;\n        break;\n        case 5:\n            this.status.num = isOut?8:4;\n        break;\n        case 8:\n            if(isOut){\n                this.status.num = 1;\n                this.status.multiple *=10;\n            }else\n                this.status.num = 5;\n        }\n    }\n\n    constructor(props){\n        super(props);\n        this.canvas = React.createRef();\n        this.controls = React.createRef();\n\n        this.fix = 2;\n        this.clicked = false;\n        this.lastX = 0;\n        this.lastY = 0;\n        \n        this.lastTime = new Date().getTime();\n    }\n\n    onMouseMove(e){\n        if(this.clicked===true&&this.status.is2D===true){\n            if((new Date()).getTime()-this.lastTime<30)\n                return;\n            this.translate_view_by(e.pageX-this.lastX, -e.pageY+this.lastY);\n            this.updateDimensions();\n            this.lastX = e.pageX;\n            this.lastY = e.pageY;\n            this.lastTime = (new Date()).getTime();\n        }\n    }\n    \n    onMouseDown(e){\n        if(this.clicked===false){\n            this.clicked = true;\n            this.lastX = e.pageX;\n            this.lastY = e.pageY;\n            this.lastTime = (new Date()).getTime();\n        }\n    }\n    \n    onMouseUp(e){\n        this.clicked = false;\n    }\n\n    onMouseOut(e){\n        this.clicked = false;\n    }\n\n\n    getInfo2D(){\n        let height = this.canvas.current.height;\n        let width = this.canvas.current.width;\n\n        let RTPY = y_step_p/this.status.y_step;\n        let RTPX = x_step_p/this.status.x_step;\n\n        let px_center=Math.ceil(width/2 + this.status.x_center*RTPX);\n        let py_center= Math.ceil(height/2 - this.status.y_center*RTPY);\n        \n        let top = py_center/RTPY;\n        let bottom = (py_center-height)/RTPY;\n        let left = -px_center/RTPX;\n        let right = (width-px_center)/RTPY;\n\n        return {\n\n            height: height,\n            width:  width,\n            px_center: px_center,\n            py_center: py_center,\n            top: top,\n            bottom: bottom,\n            left:left,\n            right:right,\n            RTPY:RTPY,\n            RTPX:RTPX,\n\n        }\n    }\n\n    draw2DGrid(){\n        \n        let ctx = this.canvas.current.getContext('2d');\n        let ctxI = this.getInfo2D();\n\n        ctx.translate(-0.5,-0.5);\n        ctx.lineWidth = 1.5;\n\n        ctx.beginPath();\n        \n        //Y-Axis\n        ctx.moveTo(ctxI.px_center,0);\n        ctx.lineTo(ctxI.px_center, ctxI.height);\n\n        //X-Axis\n        ctx.moveTo(0,ctxI.py_center);\n        ctx.lineTo(ctxI.width,ctxI.py_center);\n        \n        ctx.stroke();\n\n        //We should always draw from top to bottom and left to right\n\n        //Lines Parallel to X-Axis\n        let start_p = ctxI.py_center%y_step_p;\n        let count = 5-((ctxI.py_center-start_p)/y_step_p)%5;\n        let label_p;\n\n        if(ctxI.px_center>ctxI.width)\n            label_p = ctxI.width;\n        else if(ctxI.px_center<0)\n            label_p = 30;\n        else\n            label_p = ctxI.px_center;\n\n        ctx.lineWidth=0.2;\n        while(start_p<=ctxI.height){\n            if(count%5===0){\n                ctx.lineWidth=0.8;\n            }\n\n            ctx.beginPath(); \n            ctx.moveTo(0, start_p);\n            ctx.lineTo(ctxI.width, start_p);\n            ctx.stroke();\n            \n            if(count%5===0){\n                let num = (ctxI.py_center-start_p)/ctxI.RTPY;\n                if(Math.abs(num)<1000&&Math.abs(num)>0.7||num===0){\n                    let textwidth = (ctx.measureText(num.toFixed(this.fix).toString())).width+3;\n                    ctx.fillText(num.toFixed(this.fix).toString(), \n                        label_p-textwidth, start_p-8);\n                }else{\n                    let textwidth = (ctx.measureText(num.toExponential(this.fix).toString())).width+3;\n                    ctx.fillText(num.toExponential(this.fix).toString(), \n                        label_p-textwidth, start_p-8);\n                }\n\n                ctx.lineWidth=0.2;\n            }\n            start_p += y_step_p;\n            count++;\n        }\n\n        //Lines Parallel to Y-Axis\n        start_p = ctxI.px_center%x_step_p;\n        count = 5-((ctxI.px_center-start_p)/x_step_p)%5;\n\n        if(ctxI.py_center>ctxI.height)\n            label_p = ctxI.height-8;\n        else if(ctxI.py_center<0)\n            label_p = 8;\n        else\n            label_p = ctxI.py_center-8;\n        \n        ctx.lineWidth=0.2;\n        while(start_p<=ctxI.width){\n            if(count%5===0){\n                ctx.lineWidth=0.8;\n            }\n\n            ctx.beginPath(); \n            ctx.moveTo(start_p,0);\n            ctx.lineTo(start_p, ctxI.height);\n            ctx.stroke();\n            \n            if(count%5===0){\n                if(start_p!==ctxI.px_center){\n                    let num = (start_p-ctxI.px_center)/ctxI.RTPX;\n                    if(Math.abs(num)<1000&&Math.abs(num)>=0.07){\n                        let textwidth = (ctx.measureText(num.toFixed(this.fix).toString())).width+3;\n                        ctx.fillText(num.toFixed(this.fix).toString(), \n                            start_p-textwidth,  label_p);\n                    }else{\n                        let textwidth = (ctx.measureText(num.toExponential(this.fix).toString())).width+3;\n                        ctx.fillText(num.toExponential(this.fix).toString(), \n                            start_p-textwidth,  label_p);\n                    }\n                }\n                ctx.lineWidth=0.2;\n            }\n            start_p += y_step_p;\n            count++;\n        }\n    \n\n        \n\n    }\n\n    updateDimensions(w_frac = null){\n        if(w_frac!=null)\n            this.w_frac = w_frac;\n        if(this.canvas.current===null)\n            return;\n        this.canvas.current.height = h_frac*window.innerHeight;\n        this.canvas.current.width = this.w_frac*window.innerWidth;\n        \n        this.draw2DGrid();\n        this.draw();\n    }\n\n    draw(){\n        let ctx = this.canvas.current.getContext('2d');\n        let inf = this.getInfo2D();\n        ctx.lineWidth = 3;\n        for(let i=0;i<this.props.inputs.length;i++){\n            let input = this.props.inputs[i];\n            if(input.visible&&input.type==='equation'){\n                if(input.fp!==null){\n                    ctx.strokeStyle = input.color;\n                    Symbol.draw2D(ctx,input.fp,inf,\n                            this.props.getValueArray(input.fp.parm));\n                }\n            }\n        }\n        \n    }\n\n    componentDidMount(){\n        this.canvas.current.height = h_frac*window.innerHeight;\n        this.canvas.current.width = this.w_frac*window.innerWidth;\n        this.draw2DGrid();\n\n        window.addEventListener(\"resize\", this.updateDimensions.bind(this,null));\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateDimensions.bind(this,null));\n    }\n\n    zoom(isOut=false){\n        if((new Date()).getTime()-this.lastTime<30)\n            return;\n        this.lastTime = (new Date()).getTime();\n        this.modifyStep(isOut);\n        this.status.x_step = this.status.num*this.status.multiple;\n        this.status.y_step = this.status.num*this.status.multiple;\n        this.updateDimensions();\n    }\n\n    onWheel(e){\n        if(e.deltaY>0){\n            this.zoom(true);\n        }else{\n            this.zoom(false);\n        }\n    }\n    render() {\n        return (\n            <div>\n            \n            <div style={{position:'fixed', top:'6%', right:'2%'}}>\n                <input type='button' defaultValue='-' className='rounded-right-button' onClick={this.zoom.bind(this,true,2)}/>\n                <input type='button' defaultValue='+' className='rounded-right-button' onClick={this.zoom.bind(this,false,2)}/>\n            </div>\n            <canvas ref = {this.canvas}\n                onMouseDown={this.onMouseDown.bind(this)}\n                onMouseUp={this.onMouseUp.bind(this)}\n                onMouseMove={this.onMouseMove.bind(this)}\n                onMouseOut={this.onMouseOut.bind(this)}\n                onWheel={this.onWheel.bind(this)}/>\n            </div>\n        );\n    }\n}\n\nPlotCanvas.PorpTypes={\n    inputs: PorpTypes.array.isRequired,\n    getValueArray: PorpTypes.func.isRequired,\n}\n\nexport default PlotCanvas;","import React, { Component } from 'react';\nimport Logo from '../../logo.svg'\n\nclass NavBar extends Component {\n    constructor(props){\n        super(props);\n        this.twoD3D = React.createRef();\n        this.dimState = '3D';\n    }\n    toggletwoD3D = ()=>{\n        this.dimState = this.dimState==='3D'?'2D':'3D'; \n        this.props.toggleDim();\n    }\n    render() {\n        return (\n        <header style={headerStyle}>\n            <img style={logoStyle} src = {Logo} alt=\"graphOE\"/>\n            <input ref={this.twoD3D} type='button' defaultValue={this.dimState} className='rounded-right-button' \n                onClick={this.toggletwoD3D}></input>\n        </header>\n        );\n    }\n}\n\nconst headerStyle ={\n    background:'#eee',\n    color: '#000',\n    textAlign: 'left',\n    padding: '0px',\n    margin: '0px',\n    height:'10%',\n    width:'100%',\n    fontSize:'30px',\n};\n\nconst logoStyle = {\n    width:'100px',\n    height:'30px',\n    alignment:'left',\n}\n\nexport default NavBar;","import React, { Component } from 'react';\nimport '../style.css'\n\nclass FromTo extends Component {\n    constructor(props){\n        super(props);\n        this.max = React.createRef();\n        this.min = React.createRef();\n    }\n    \n    passChange = ()=>{\n        this.props.passChange(this.props.name,this.min.current.value, this.max.current.value);\n    }\n\n    render() {\n        return (\n            <div>\n                <input type='text' ref={this.min} className='text-input-small'\n                    defaultValue={this.props.min.toString()} onChange={this.passChange}/>\n                <span style={{fontSize:'15px'}}>{`<<=${this.props.name}=<<`}</span>\n                <input type='text' ref={this.max} className='text-input-small'\n                    defaultValue={this.props.max.toString()} onChange={this.passChange}/>\n            </div>\n        );\n    }\n}\n\nexport default FromTo;","import React, { Component } from 'react';\nimport nextId from 'react-id-generator';\nimport FromTo from './FromTo';\nimport '../style.css'\n\nclass EquationInput extends Component {\n    state = {\n        par:false,\n    }\n    constructor(props){\n        super(props);\n        this.text_box = React.createRef();\n        this.color_picker = React.createRef();\n        this.visible = React.createRef();\n    }\n\n    addSlider(name){\n        this.props.addSlider(name, this.props.input.id);\n    }\n    removeInput(){\n        this.props.removeInput(this.props.input.id);\n    }\n    update =(visible=null)=>{\n        this.props.updateEquation(this.props.input.id,this.text_box.current.value,\n                this.color_picker.current.value,visible);\n    }\n    showParameter(){\n        this.setState({par: !this.state.par});\n    }\n    parametricChange=(name,min,max)=>{\n        this.props.parametricChange(this.props.input.id, name,min,max);\n    }\n    render() {\n        let slider_buttons=null;\n        if(this.props.input.sliders.length!==0){\n            let my_pointer = this;\n            slider_buttons = this.props.input.sliders.map((name)=>{\n                return <input key = {nextId()} type='button' defaultValue = {name} \n                    onClick={my_pointer.addSlider.bind(my_pointer,name)} className='rounded-right-button' />\n            });\n        }\n        let parametric_thing = null;\n        if(this.props.input.fp!==null){\n            if(this.props.input.fp.type==='parametric'){\n                if(this.props.is2D){\n                    if(this.props.input.fp.parm.indexOf('t')!==-1)\n                    parametric_thing = (<FromTo name='t' max={this.props.input.fp.max} \n                            min={this.props.input.fp.min} passChange={this.parametricChange}/>)    \n                }else{\n                    parametric_thing = [];\n                    if(this.props.input.fp.parm.indexOf('u')!==-1)\n                        parametric_thing.push(<FromTo name='u' max={this.props.input.fp.u.max} \n                        min={this.props.input.fp.u.min} passChange={this.parametricChange}/>)\n                    if(this.props.input.fp.parm.indexOf('v')!==-1)\n                        parametric_thing.push(<FromTo name='v' max={this.props.input.fp.v.max} \n                        min={this.props.input.fp.v.min} passChange={this.parametricChange}/>)\n                }\n            }else\n                this.state.par = false;\n        }\n\n        return (\n            <div className='input-panel-div'>\n                <input type='button' defaultValue='x' className='rounded-right-small-button'\n                    onClick={this.removeInput.bind(this)}/>\n                <input type='color' ref={this.color_picker} className='color-picker'\n                    onChange={this.update} value={this.props.input.color}/>\n                {parametric_thing!==null?\n                <input type='button' defaultValue={this.state.par?'Hp':'P'} className='rounded-right-small-button'\n                    onClick={this.showParameter.bind(this)}/>:null}\n                <input type='button' defaultValue={this.props.input.visible?'H':'S'} className='rounded-right-small-button'\n                    onClick={this.update.bind(this,!this.props.input.visible)}/>\n                <input type='text'  ref={this.text_box} defaultValue = {this.props.input.value} \n                    className='equation-input' onChange={this.update}/>\n                {\n                    this.props.input.sliders.length!==0?\n                    <p className='label-small-left'>Add Slider(s)</p>\n                    :null\n                }\n                {\n                    this.state.par?\n                    parametric_thing:null\n                }\n                {\n                    this.props.input.error!==''?\n                    \n                    <p>{this.props.input.error}</p>\n                    \n                    :slider_buttons\n                }\n            </div>\n        );\n    }\n}\n\nexport default EquationInput;","import React, { Component } from 'react';\nimport '../style.css'\n\nclass SlideInput extends Component {\n    \n    state = {\n        show_range: false,\n        min: 0,\n        max: 1,\n        dum:0,\n    }\n\n    constructor(props){\n        super(props);\n        this.slider = React.createRef();\n        this.min = React.createRef();\n        this.max = React.createRef();\n        this.animating = false;\n        this.timer = null;\n        this.isIncrease = true;\n        this.value = 0;\n        this.state.min = this.props.input.min;\n        this.state.max = this.props.input.max;\n    }\n    \n    handleMinMax(){\n        let min = parseFloat(this.min.current.value);\n        let max = parseFloat(this.max.current.value);\n        \n        //min>max\n        if(min>max){\n            min = 0; max = 10;\n        }\n\n        this.setState({min:min});\n        this.setState({max:max});\n\n        //Slider Values\n        if(this.slider.current.value>max)\n            this.slider.current.value = max;\n        else if(this.slider.current.value<min)\n            this.slider.current.value = min;\n\n        \n\n        this.props.changeSlider(this.props.input.id, this.slider.current.value, \n            min, max,\n                this.props.input.name);\n    }\n\n    handleChange(){\n        this.props.changeSlider(this.props.input.id, this.slider.current.value, \n            this.state.min, this.state.max,\n                this.props.input.name);\n    }\n\n    tick=()=>{\n        if(this.value>this.state.max)\n            this.isIncrease = false;\n        else if(this.value<this.state.min)\n            this.isIncrease = true;\n        \n        if(this.isIncrease)\n            this.value += 50*parseFloat(this.slider.current.step);\n        else\n            this.value -= 50*parseFloat(this.slider.current.step);\n        \n        this.props.changeSlider(this.props.input.id, this.value, \n            this.state.min, this.state.max,\n                this.props.input.name);\n    }\n\n    removeInput(){\n        this.props.removeInput(this.props.input.id);\n    }\n\n    toggle_minmax(){\n        this.setState({show_range:!this.state.show_range});\n    }\n\n    startAnimation(){\n       if(this.animating===false){\n           this.animating = true;\n           this.timer = window.setInterval(this.tick,40);\n       }else{\n           window.clearInterval(this.timer);\n           this.animating = false;\n       }\n       this.setState({dum:1});\n    }\n    componentWillUnmount(){\n        if(this.animating)\n            window.clearInterval(this.timer);\n    }\n    \n    render() {\n        return (\n            <div className='input-panel-div'>\n                <input type='button' defaultValue='x' className='rounded-right-small-button'\n                    onClick={this.removeInput.bind(this)}/>\n                <label className='label-medium-left'>\n                    {this.props.input.name}\n                </label>\n                <label className='label-medium-left'>\n                    {parseFloat(this.props.input.value).toExponential(1)}\n                </label>\n                <input type='button' defaultValue = {this.state.show_range?'^':'_'} \n                    onClick = {this.toggle_minmax.bind(this)} \n                        className='rounded-right-button'/>\n                <input type='button' defaultValue = {this.animating?'Stop':'Start'} \n                    onClick = {this.startAnimation.bind(this)} \n                        className='rounded-right-button'/>\n                <br/>\n                <br/>\n\n                <label className='label-small-left'>\n                    {this.props.input.min.toExponential(1)}\n                </label>\n                <input \n                    ref = {this.slider} \n                    type='range' \n                    min= {this.props.input.min} \n                    max= {this.props.input.max} \n                    step={(this.props.input.max-this.props.input.min)/1000} \n                    defaultValue = {this.props.input.value}\n                    onChange={this.handleChange.bind(this)}\n                    className='slider'/>\n               \n               <label className='label-small-right'>\n                    {this.props.input.max.toExponential(1)}\n                </label>\n                {\n                    this.state.show_range?\n                    <div>\n                        <input type='text' ref={this.min} className='text-input-small'\n                            defaultValue={this.state.min.toString()} onChange={this.handleMinMax.bind(this)}/>\n                        <span> to </span>\n                        <input type='text' ref={this.max} className='text-input-small'\n                            defaultValue={this.state.max.toString()} onChange={this.handleMinMax.bind(this)}/>\n                    </div>:\n                    null\n                }\n\n            </div>\n        );\n    }\n}\n\n\nexport default SlideInput;\n","import {Vec3} from '../math/math'\n\nclass PlyLoader{\n    constructor(str){\n        this.index = 0;\n        this.str = str;\n        this.length = str.length;\n        this.description = [];\n        if(this.nextLine()!=='ply'){\n            console.error('File doesn\\'t seems to be ply format');\n            return;\n        }\n\n        //Check for Format\n        let things  = this.nextLine().split(' ');\n        if(things[0]!=='format'){\n            console.error(\"File Format not found\");\n            return;\n        }else if(things[1].indexOf('ascii')!==0){\n           console.error(\"Only Ascii format allowed(^_^) Thanks!\");\n           return;\n        }\n\n        //Store Comments into description\n        let nextLin = this.nextLine();\n        while(true){\n            if(nextLin.indexOf('comment')===0){\n                this.description.push(nextLin.substring(8));\n            }else\n                break;\n            nextLin = this.nextLine();\n        }\n\n        //Create element format \n        this.elements = [];\n        things = nextLin.split(' ');\n        while(true){\n            if(things[0]==='element'){\n                let count = parseInt(things[2]);\n                if(things[1]!==''&&!Number.isNaN(count)){\n                    let element = {type: things[1], count: count, property:[]};\n                    let go = true;\n                    while(go){\n                        things = this.nextLine().split(' ');\n                        if(things[0]==='property'){\n                            if(things[1]==='list'){\n                                element.property.push({type: things[1], first: things[2], second: things[3], name: things[4]});\n                            }\n                            else\n                                element.property.push({type: things[1], name: things[2]})\n                        }else{\n                            go=false;\n                        }\n                    }\n                    this.elements.push(element);\n                }\n            }else\n                break;\n        }\n\n        if(things[0]!=='end_header'){\n            console.error('End of Header not specified');\n        }\n\n        let vertices=[], indices=[];\n        for(let i=0;i<this.elements.length;i++){\n            let element = this.elements[i];\n            if(element.type==='vertex'){\n                for(let i=0;i<element.count;i++){\n                    things = this.nextLine().split(' ');\n                    for(let j=0;j<element.property.length;j++){\n                        vertices.push(parseFloat(things[j]));\n                    }    \n                }\n            }else if(element.type==='face'){\n                if(element.property[0].type==='list'){\n                    for(let i=0;i<element.count;i++){\n                        things = this.nextLine().split(' ');\n                        let count = parseInt(things[0]);\n\n                        //This does triangulation\n                        for(let j=1;j<count-1;j++){\n                            indices.push(parseInt(things[1]));\n                            indices.push(parseInt(things[j+1]));\n                            indices.push(parseInt(things[j+2]));\n                        }\n                    }\n                }else{\n                    console.error(\"Can't read vertex_indices with more than one property\");\n                    return;\n                }\n            }else{\n                console.error(\"Can't read element of type \"+element.type);\n                return;\n            }\n        }\n\n        //Normalize the vertexcolors\n        let stride = this.elements[0].property.length;\n        let ind = this.getIndexOf('red', 0);\n        if(ind!==-1){\n            console.log('Color Index ' +ind.toString());\n            console.log(`${vertices[ind]}, ${vertices[ind+1]}, ${vertices[ind+2]}, ${vertices[ind+3]}`)\n            if(this.elements[0].property[ind].type==='uchar'){\n                for(let i=ind;i<vertices.length;i+=stride){\n                    vertices[i] /=255;\n                    vertices[i+1] /=255;\n                    vertices[i+2] /=255;\n                    vertices[i+3] =1;\n                }\n            }\n            console.log(`${vertices[ind]}, ${vertices[ind+1]}, ${vertices[ind+2]}, ${vertices[ind+3]}`)\n        }\n\n        //Here Calculate the normals\n        let vertices_with_normal = vertices;\n        ind = this.getIndexOf('nx',0);\n        console.log('Normal Index: '+ind.toString());\n        if(ind===-1){\n            let vec1, vec2;\n            let i1,i2,i3,i4,i5,i6,i7,i8,i9;\n            let normals = Array(3*vertices.length/stride).fill(null);\n            for(let i=0;i<indices.length;i+=3){\n\n                let a = stride*indices[i];\n                i1 = vertices[a+0];\n                i2 = vertices[a+1];\n                i3 = vertices[a+2];\n                // console.log(a);\n\n                a = stride*indices[i+1];\n                i4 = vertices[a+0];\n                i5 = vertices[a+1];\n                i6 = vertices[a+2];\n                // console.log(a);\n\n                a = stride*indices[i+2];\n                i7 = vertices[a+0];\n                i8 = vertices[a+1];\n                i9 = vertices[a+2];\n                // console.log(a);\n                \n                // console.log({i1, i2, i3, i4, i5, i6, i7, i8, i9})\n\n                vec1 = new Vec3(i4-i1, i5-i2, i6-i3);\n                vec2 = new Vec3(i7-i4, i8-i5, i9-i6);\n                // console.log(vec2);\n                // console.log(vec1);\n                vec2 = vec1.cross(vec2);\n                \n                \n                for(let j=0;j<3;j++){\n                    a = 3*indices[j+i];\n                    if(normals[a]===null){\n                        normals[a] = vec2.x;\n                        normals[a+1] = vec2.y;\n                        normals[a+2] = vec2.z;\n                    }\n                }\n            }\n\n            //Here Combine normals and the vertices Okay\n            let length = vertices.length+normals.length;\n            vertices_with_normal= Array(length);\n            for(let i=0,j=0,l=0;i<length;){\n                for(let k=0;k<stride;j++,k++,i++){\n                    vertices_with_normal[i] = vertices[j];\n                }\n                for(let k=0;k<3;k++,l++,i++){\n                    vertices_with_normal[i] = normals[l];\n                }\n            }\n        }\n\n        if(this.getIndexOf('red',0)!==-1)\n            return {vertices:vertices_with_normal, indices:indices, textured:true};\n        else\n            return {vertices:vertices_with_normal, indices:indices, textured:false};\n    }\n\n\n    nextLine(){\n        let start = this.index;\n        for(;this.str[this.index]!=='\\n'&&\n                this.index<this.length;this.index++);\n                \n        let ret_str = (this.str.substring(start,this.index)).trim();\n        \n        if(this.str[this.index]==='\\n')\n            this.index++; \n        \n        return ret_str;\n    }\n\n    getIndexOf(str,index){\n        let property = this.elements[index].property;\n        for(let i=0;i<property.length;i++){\n            if(property[i].name===str)\n                return i;\n        }\n        return -1;\n    }\n}\n\nexport default PlyLoader;","import React, { Component } from 'react';\nimport PlyLoader from '../graphics/PlyLoader'\nimport '../style.css';\n\nclass PlyInput extends Component {\n    state = {\n        loaded: false,\n        show_color:false,\n    }\n    \n    constructor(props){\n        super(props);\n        this.input_ref = React.createRef();\n        this.color_ref = React.createRef();\n    }\n\n    componentDidMount(){\n        this.input_ref.current.onclick = this.toggleLoad; \n    }\n\n    passColor(visible=null){\n        this.props.updateFile(this.props.input.id, this.color_ref.current.value, null, null,visible);\n    }\n\n    loadFile = (e)=>{\n        e.preventDefault();\n        let input_file = this.input_ref.current.files[0];\n        if(input_file===undefined||input_file===null)\n            return;\n        let reader = new FileReader();\n        let data;\n        let thisPointer = this;\n        reader.loadend = function(){}\n        reader.onload = function(e){\n            data = e.target.result;\n            let obj = new PlyLoader(data);\n            if(obj===null||obj===undefined)\n                return;\n            thisPointer.props.updateFile(thisPointer.props.input.id, null, obj, input_file.name);\n        }\n        this.setState({loaded:false});\n        this.setState({show_color:true});\n        reader.readAsText(input_file);\n    }\n\n    toggleLoad=()=>{\n        this.setState({loaded:true});\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.loadFile}>\n                <label className='custom-input-label'>\n                    {!this.state.show_color?\n                        <input ref={this.input_ref} type='file' className='input-file'/>:\n                        <span>\n                        <input type='button' defaultValue='x' className='rounded-right-small-button'\n                        onClick={this.props.removeInput.bind(this.props.input.id)}/>\n                        <input ref={this.color_ref} type='color' className='color-picker'\n                            onChange={this.passColor.bind(this)}/>\n                         \n                        <input type='button' value={this.props.input.visible?'H':'S'} \n                            className='rounded-right-button' \n                                onClick={this.passColor.bind(this,!this.props.input.visible)}/>\n                        </span>\n                    }\n                        {this.props.input.name}\n                    {this.state.loaded&&!this.state.show_color?\n                    <input type='submit' value='Draw' className='rounded-right-button'/>:null}\n                </label>\n            </form>\n        );\n    }\n}\n\nexport default PlyInput;","import React, { Component } from 'react';\nimport EquationInput from './EquationInput';\nimport SlideInput from './SlideInput';\nimport PlyInput from './PlyInput';\n\n\nclass InputPanel extends Component {\n    state = {\n        \n    };\n\n    constructor(props){\n        super(props);\n        this.mainDiv = React.createRef();\n    }\n\n    componentDidMount(){\n        \n    }\n\n    render() {\n        let props = this.props;\n        return props.inputs.map(function(input){\n            if(input.type==='equation'){\n               return <EquationInput key={input.id} \n                        input={input} updateEquation={props.updateEquation}\n                        addSlider={props.addSlider} removeInput={props.removeInput}\n                        is2D={props.is2D} parametricChange = {props.parametricChange}/>\n            }else if(input.type==='slider'){\n                return <SlideInput key={input.id} input={input} \n                                changeSlider={props.changeSlider} removeInput={props.removeInput}/>\n            }else if(!props.is2D){\n                return <PlyInput key={input.id} input={input} \n                            updateFile={props.updateFile} removeInput={props.removeInput}/>\n            }\n        });\n    }\n}\n\nexport default InputPanel;","function initShader(gl, vertexShader, fragmentShader){\n\t//VertexShader\n\tvar vertexShdr = gl.createShader(gl.VERTEX_SHADER);\n\tgl.shaderSource(vertexShdr, vertexShader);\n\tgl.compileShader(vertexShdr);\n\n\tvar shdr_comp_res = gl.getShaderParameter(vertexShdr, gl.COMPILE_STATUS);\n\tif(!shdr_comp_res){\n\t\tconsole.error(\"VertexShader Compilation Failed:\\n\" + gl.getShaderInfoLog(vertexShdr));\n\t\treturn;\n\t}\n\n\t//FragmentShader\n\tvar fragShdr = gl.createShader(gl.FRAGMENT_SHADER);\n\tgl.shaderSource(fragShdr, fragmentShader);\n\tgl.compileShader(fragShdr);\n\n\tshdr_comp_res = gl.getShaderParameter(fragShdr, gl.COMPILE_STATUS);\n\tif(!shdr_comp_res){\n\t\tconsole.error(\"FragmentShader Compilation Failed:\\n\" + gl.getShaderInfoLog(fragShdr));\n\t\treturn;\n\t}\n\n\t//Program\n\tvar program = gl.createProgram();\n\n\tgl.attachShader(program, vertexShdr);\n\tgl.attachShader(program, fragShdr);\n\n\tgl.linkProgram(program);\n\n\tif(!gl.getProgramParameter(program, gl.LINK_STATUS)){\n\t\tconsole.error(\"Program Linking Failed:\\n\" + gl.getProgramInfoLog(program));\n\t}\n\treturn program;\n\n}\n\nfunction initShaderFromId(gl, vertexShader_Id, fragmentShader_Id){\n\tvar vertexShader = document.getElementById(vertexShader_Id).text;\n\tvar fragmentShader = document.getElementById(fragmentShader_Id).text;\n\n\treturn initShader(gl,vertexShader, fragmentShader);\n}\n\nexport{initShader};","import {Mat4f,Mat3f,Vec3} from '../math/math'\nimport {initShader} from './compile'\n\n//Will Implement translate, rotate, etc\nclass FilledShape3D{\n    constructor(gl, setting){\n        if(!FilledShape3D.initialized)\n            FilledShape3D.init(gl);\n        this.vArray = []\n        this.centroid = new Vec3(0,0,0);\n        if(setting.indices == null){\n            this.no_indices = true;\n            for(let i=0;i<setting.num_face;i++){\n                this.vArray[i] = gl.createVertexArray();\n                gl.bindVertexArray(this.vArray[i]);\n\n                let vBuffer = gl.createBuffer();\n                gl.bindBuffer(gl.ARRAY_BUFFER, vBuffer);\n                gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(setting.coords[i]), gl.STATIC_DRAW);\n                \n                //VertexAttribute\n                gl.vertexAttribPointer(FilledShape3D.text_cord_loc, 2, gl.FLOAT, true, 20, 12);\n                gl.enableVertexAttribArray(FilledShape3D.text_cord_loc);\n                \n                gl.vertexAttribPointer(FilledShape3D.coordinate_loc, 3, gl.FLOAT, true, 20, 0);\n                gl.enableVertexAttribArray(FilledShape3D.coordinate_loc);\n\n                //Calculation of centroid:\n                for(let j=0;j<setting.nvp;j++){\n                    this.centroid.x +=  setting.coords[i][5*j + 0];\n                    this.centroid.y +=  setting.coords[i][5*j + 1];\n                    this.centroid.z +=  setting.coords[i][5*j + 2];\n                }\n\n                gl.bindVertexArray(null);\n                gl.bindBuffer(gl.ARRAY_BUFFER, null);\n            }\n        }\n\n        this.centroid.x /= setting.nvp*setting.num_face;\n        this.centroid.y /= setting.nvp*setting.num_face;\n        this.centroid.z /= setting.nvp*setting.num_face;\n        \n        console.log(\"Centroid: (\"+this.centroid.x.toString()+\", \"+this.centroid.y.toString()\n                        +\", \"+this.centroid.z.toString()+\")\");\n\n        this.texture = []\n        //Texture:\n        for(let i=0;i<setting.num_face;i++){\n            this.texture[i] = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, this.texture[i]);\n            \n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            \n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n            \n            gl.texImage2D(gl.TEXTURE_2D, \n                            0, \n                            gl.RGBA, \n                            setting.texture.width[i],\n                            setting.texture.height[i], \n                            0, \n                            gl.RGBA, \n                            gl.UNSIGNED_BYTE,\n                            new Uint8Array(setting.texture.data[i])\n                            );\n            gl.bindTexture(gl.TEXTURE_2D, null);\n        }\n        \n        //Model Matrix\n        this.model_mat = new Mat4f();\n\n        this.numVert = setting.nvp;\n        this.num_face = setting.num_face;\n    }\n  \n    render(gl){\n        \n        gl.useProgram(FilledShape3D.program);\n        if(this.no_indices){\n            gl.uniformMatrix4fv(FilledShape3D.model_loc, false, this.model_mat.content);\n            gl.uniformMatrix4fv(FilledShape3D.proj_loc, false, gl.proj_mat.content); \n            \n            //Originally opengl supposes column major, change to row major by transpose\n            gl.uniformMatrix4fv(FilledShape3D.view_loc, true, gl.cam.mat.content);  \n            for(let i=0;i<this.num_face;i++){\n                gl.bindTexture(gl.TEXTURE_2D, this.texture[i]);\n                gl.bindVertexArray(this.vArray[i]);\n                gl.drawArrays(gl.TRIANGLE_FAN, 0, this.numVert);\n            }\n            gl.bindVertexArray(null);\n        }\n    }\n\n    rotate(axis,angle){\n\n    }\n\n    translate(){\n\n    }\n\n    static init(gl){\n        let program = FilledShape3D.program = initShader(gl, FilledShape3D.vertexShader, \n                                                FilledShape3D.fragmentShader);\n        FilledShape3D.coordinate_loc = gl.getAttribLocation(program, 'coordinate');\n        FilledShape3D.tex_cord_loc = gl.getAttribLocation(program, 'tCord');\n        FilledShape3D.model_loc = gl.getUniformLocation(program, 'model');\n        FilledShape3D.proj_loc = gl.getUniformLocation(program, 'proj');\n        FilledShape3D.view_loc = gl.getUniformLocation(program,'view');\n        FilledShape3D.initialized = true;\n    }\n\n}\n\nFilledShape3D.vertexShader =\n                            \"attribute vec2 tCord;\\n\"+\n                            \"attribute vec3 coordinate;\\n\"+\n                            \"uniform mat4 model;\\n\"+\n                            \"uniform mat4 view;\\n\"+\n                            \"uniform mat4 proj;\\n\"+\n                            \"varying vec2 vTex;\\n\"+\n                            \"void main(){\\n\"+\n                            \"   vTex = tCord;\\n\"+\n                            \"   gl_Position = proj*(view*(model*(vec4(coordinate.xyz, 1.0))));\\n\"+\n                            \"}\";\n\nFilledShape3D.fragmentShader =  \"precision mediump float;\\n\"+\t\t\n                                \"varying vec2 vTex;\\n\"+\n                                \"uniform sampler2D texData;\\n\"+\t\n                                \"void main(){\\n\"+\n                                \"    gl_FragColor = texture2D(texData, vTex);\\n\"+\n                                \"}\";\n\nFilledShape3D.initialized = false;\n\nfunction get_colored_surface(gl,setting){\n    get_colored_surface.tex_cords = [\n        0.0, 0.0,\n        1.0, 0.0,\n        1.0, 1.0,\n        0.0,1.0,\n    ]\n\n    let setting_to_send = {nvp:4, num_face: 1,coords:[], texture:{ height:[1],width:[1], data:[setting.color]}};\n    setting_to_send.coords[0] = [];\n\n    for(let i=0,j=0;j<get_colored_surface.tex_cords.length;i+=3, j+=2){\n        let a = 5*j/2;\n        console.log(a);\n        setting_to_send.coords[0][a + 0] = setting.coords[i];\n        setting_to_send.coords[0][a + 1] = setting.coords[i+1];\n        setting_to_send.coords[0][a + 2] = setting.coords[i+2];\n\n        console.log(`(${setting.coords[i]},${setting.coords[i+1]},${setting.coords[i+2]})`)\n\n        setting_to_send.coords[0][a + 3] = get_colored_surface.tex_cords[j+0];\n        setting_to_send.coords[0][a + 4] = get_colored_surface.tex_cords[j+1]; \n    }\n    return new FilledShape3D(gl,setting_to_send);\n}\n\nfunction get_textured_cube(gl, settings){\n    get_textured_cube.indices = new Uint16Array([\n        0, 1, 2, 3,\n        0, 1, 5, 4,\n        \n        0, 3, 7, 4,\n        1, 2, 6, 5,\n        4, 5, 6,  7,\n        \n        2, 3, 7, 6\n    ]);\n\n    get_textured_cube.tex_cords = [\n        0.0, 0.0,\n        1.0, 0.0,\n        1.0, 1.0,\n        0.0,1.0,\n    ]\n\n    let cord_set = [\n        settings.coords[0], settings.coords[1], settings.coords[2],\n        settings.coords[3], settings.coords[1], settings.coords[2],\n        settings.coords[3], settings.coords[4], settings.coords[2],\n        settings.coords[0], settings.coords[4], settings.coords[2],\n        settings.coords[0], settings.coords[1], settings.coords[5],\n        settings.coords[3], settings.coords[1], settings.coords[5],\n        settings.coords[3], settings.coords[4], settings.coords[5],\n        settings.coords[0], settings.coords[4], settings.coords[5],\n    ]\n    \n    let setting_to_send = { coords:[], texture:settings.texture, num_face: 6, nvp: 4};\n    for(let i=0;i<6;i++){\n        setting_to_send.coords[i] = []\n        \n        for(let j=0;j<4;j++){\n            let disp = 3*get_textured_cube.indices[i*4 + j];\n            \n            //Vertices\n            setting_to_send.coords[i].push(cord_set[ disp + 0]);\n            setting_to_send.coords[i].push(cord_set[ disp + 1]);\n            setting_to_send.coords[i].push(cord_set[ disp + 2]);\n\n            //Texture Coordinate\n            setting_to_send.coords[i].push(get_textured_cube.tex_cords[2*j  + 0]);\n            setting_to_send.coords[i].push(get_textured_cube.tex_cords[2*j  + 1]);\n\n        }\n    }\n    return new FilledShape3D(gl,setting_to_send);\n}\n\nclass FilledShape2D{\n    constructor(gl, setting){\n        if(!FilledShape2D.initialized)\n            FilledShape2D.init(gl);\n        \n        this.vArray = gl.createVertexArray();\n        gl.bindVertexArray(this.vArray); \n        \n        this.vBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(setting.coords), gl.STATIC_DRAW);\n        \n        //VertexAttribute\n        \n        gl.vertexAttribPointer(FilledShape2D.text_cord_loc, 2, gl.FLOAT, true, 16, 8);\n        gl.enableVertexAttribArray(FilledShape2D.text_cord_loc);\n        \n        gl.vertexAttribPointer(FilledShape2D.coordinate_loc, 2, gl.FLOAT, true, 16, 0);\n        gl.enableVertexAttribArray(FilledShape2D.coordinate_loc);\n\n\n        gl.bindVertexArray(null);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n        //Texture:\n        this.texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, this.texture);\n        \n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        \n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        \n        gl.texImage2D(gl.TEXTURE_2D, \n                        0, \n                        gl.RGB, \n                        setting.texture.width,\n                        setting.texture.height, \n                        0, \n                        gl.RGB, \n                        gl.UNSIGNED_BYTE,\n                        new Uint8Array(setting.texture.data)\n                        );\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        \n        //Model Matrix\n        this.model_mat = new Mat3f();\n        this.numVert = setting.coords.length/4;\n        \n    }\n    \n    render(gl){\n        gl.useProgram(FilledShape2D.program);\n        gl.bindTexture(gl.TEXTURE_2D, this.texture);\n        gl.uniformMatrix3fv(FilledShape2D.model_loc, false, this.model_mat.content);  \n        gl.bindVertexArray(this.vArray);\n        gl.drawArrays(gl.TRIANGLE_FAN, 0, this.numVert);\n    }\n\n    static init(gl){\n        let program = FilledShape2D.program = initShader(gl, FilledShape2D.vertexShader, \n                                                FilledShape2D.fragmentShader);\n        FilledShape2D.coordinate_loc = gl.getAttribLocation(program, 'coordinate');\n        FilledShape2D.tex_cord_loc = gl.getAttribLocation(program, 'tCord');\n        FilledShape2D.model_loc = gl.getUniformLocation(program, 'model');\n        FilledShape2D.initialized = true;\n    }\n\n\n\n}\n\n\nFilledShape2D.vertexShader =\n                            \"attribute vec2 tCord;\\n\"+\n                            \"attribute vec2 coordinate;\\n\"+\n                            \"uniform mat3 model;\\n\"+\n                            \"uniform mat3 view;\\n\"+\n                            \"uniform mat3 proj;\\n\"+\n                            \"varying vec2 vTex;\\n\"+\n                            \"void main(){\\n\"+\n                            \"   vTex = tCord;\\n\"+\n                            \"   vec3 newCord = model*vec3(coordinate.x, coordinate.y, 1.0);\\n\"+\n                            \"   gl_Position = vec4(newCord.xy,0.0,1.0);\\n\"+\n                            \"}\";\n\nFilledShape2D.fragmentShader =  \"precision mediump float;\\n\"+\t\t\n                                \"varying vec2 vTex;\\n\"+\n                                \"uniform sampler2D texData;\\n\"+\t\n                                \"void main(){\\n\"+\n                                \"    gl_FragColor = texture2D(texData, vTex);\\n\"+\n                                \"}\";\nFilledShape2D.initialized = false;\n\nclass Grid3D{\n    constructor(gl,bound=4){\n        if(!Grid3D.init)\n            this.init(gl);\n        let lines = [];\n        for(let i=-40;i<0;i++){\n            let color = i%5===0?0.4:0.8;\n            this.addLineX(lines,color,i/10,bound);\n            this.addLineY(lines,color,i/10,bound);  \n        }\n\n        this.addLineX(lines,0.0,0,bound+bound/4);\n        this.addLineY(lines,0.0,0,bound+bound/4);\n        for(let i=1;i<40;i++){\n            let color = i%5===0?0.4:0.8;\n            this.addLineX(lines,color,i/10,bound);\n            this.addLineY(lines,color,i/10,bound);  \n        }\n        this.addLineZ(lines,0.0,bound+bound/4);\n\n        this.vArray = gl.createVertexArray();\n        gl.bindVertexArray(this.vArray);\n        this.vBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(lines), gl.STATIC_DRAW);\n        gl.vertexAttribPointer(Grid3D.color_loc, 1, gl.FLOAT, true, 16, 12);\n        gl.enableVertexAttribArray(Grid3D.color_loc);\n        gl.vertexAttribPointer(Grid3D.coord_loc, 3, gl.FLOAT, true, 16, 0);\n        gl.enableVertexAttribArray(Grid3D.cord_loc);\n        gl.bindBuffer(gl.ARRAY_BUFFER,null);\n        gl.bindVertexArray(null);\n        this.render(gl);\n    }\n\n    addLineY(arr,color,offset,y){\n        arr.push(offset);\n        arr.push(-y);\n        arr.push(0);\n        arr.push(color);\n        arr.push(offset);\n        arr.push(y);\n        arr.push(0);\n        arr.push(color);\n    }\n\n    addLineX(arr,color,offset,x){\n        arr.push(-x);\n        arr.push(offset);\n        arr.push(0);\n        arr.push(color);\n        arr.push(x);\n        arr.push(offset);\n        arr.push(0);\n        arr.push(color);\n    }\n\n    addLineZ(arr,color,z){\n        arr.push(0);\n        arr.push(0);\n        arr.push(-z);\n        arr.push(color);\n        arr.push(0);\n        arr.push(0);\n        arr.push(z);\n        arr.push(color);\n    }\n\n    init(gl){\n        let program = Grid3D.program = initShader(gl,Grid3D.vertexShader,Grid3D.fragmentShader);\n        gl.useProgram(program);\n        Grid3D.coord_loc = gl.getAttribLocation(program, 'caordinate');\n        Grid3D.color_loc = gl.getAttribLocation(program, 'fColor');\n        Grid3D.model_loc = gl.getUniformLocation(program, 'model');\n        Grid3D.proj_loc = gl.getUniformLocation(program, 'projection');\n        Grid3D.view_loc = gl.getUniformLocation(program,'view'); \n    }\n    render(gl){\n        gl.useProgram(Grid3D.program);\n        gl.uniformMatrix4fv(Grid3D.model_loc, true, Grid3D.model_mat.content);\n        gl.uniformMatrix4fv(Grid3D.proj_loc, true, gl.proj_mat.content); \n        gl.uniformMatrix4fv(Grid3D.view_loc, true, gl.cam.mat.content); \n\n        // gl.bindBuffer(gl.ARRAY_BUFFER, this.vBuffer);\n        // gl.enableVertexAttribArray(Grid3D.color_loc);\n        // gl.enableVertexAttribArray(Grid3D.coord_loc);\n        gl.bindVertexArray(this.vArray);\n        gl.drawArrays(gl.LINES,0,322);\n        // gl.disableVertexAttribArray(Grid3D.coord_loc);\n        // gl.disableVertexAttribArray(Grid3D.color_loc);\n        // gl.bindBuffer(gl.ARRAY_BUFFER,null);\n        gl.bindVertexArray(null);\n        gl.useProgram(null);\n    }\n}\n\nGrid3D.model_mat = new  Mat4f();\nGrid3D.init = false;\n\n\nGrid3D.vertexShader=   `attribute vec3 caordinate;\n                        attribute float fColor;\n                        uniform mat4 model;\n                        uniform mat4 view;\n                        uniform mat4 projection;\n                        varying float Fcolor;\n                        void main(){\n                            vec4 pos = model* vec4(caordinate,1.0);\n                            pos = view*pos;\n                            pos = projection*pos;\n                            gl_Position = pos;//vec4(coordinate,1.0);\n                            Fcolor = fColor;\n                        }`;\nGrid3D.fragmentShader = `precision mediump float;\t\t\n                        varying float Fcolor;\t\t\n                        void main(){\n                            gl_FragColor = vec4(Fcolor,Fcolor,Fcolor,1.0);\n                        }`;\n\nclass GLStuffs{}\nGLStuffs.getVertexBufferFor = function(vertices,gl){\n    let vBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\n    if(gl.getError()!==gl.NO_ERROR)\n        return null;\n\n    return vBuffer;\n}\nGLStuffs.getIndexBufferFor = function(indices, gl){\n    let iBuffer = gl.createBuffer();\n\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    if(gl.getError()!==gl.NO_ERROR)\n        return null;\n    return iBuffer;\n}\n\nclass ColoredSurface3D{\n    constructor(setting,gl){\n        if(!ColoredSurface3D.isInit)\n            this.init(gl);\n        \n        this.vArray = gl.createVertexArray();\n        gl.bindVertexArray(this.vArray);\n        \n        this.vBuffer = GLStuffs.getVertexBufferFor( setting.vertices,gl);\n        \n        gl.vertexAttribPointer(ColoredSurface3D.coord_loc, 3, gl.FLOAT, true, 24, 0);\n        gl.enableVertexAttribArray(ColoredSurface3D.coord_loc);\n\n        gl.vertexAttribPointer(ColoredSurface3D.normal_loc, 3, gl.FLOAT, true, 24, 12);\n        gl.enableVertexAttribArray(ColoredSurface3D.normal_loc);\n\n        this.iBuffer = GLStuffs.getIndexBufferFor(setting.indices, gl);\n        gl.bindVertexArray(null);\n        this.size = setting.indices.length;\n        // console.log([this.vBuffer, this.iBuffer, this.size]);\n    }\n    update_vertices(vertices,gl){\n        gl.deleteBuffer(this.vBuffer);\n        this.vBuffer = GLStuffs.getVertexBufferFor(ColoredSurface3D.cord_loc, vertices,gl);\n    }\n    update_indices(indices,gl){\n        gl.deleteBuffer(this.iBuffer);\n        this.iBuffer = GLStuffs.getIndexBufferFor(indices,gl);\n        this.size = indices.length;\n    }\n    render(gl,color){\n        gl.useProgram(ColoredSurface3D.program);\n\n        gl.uniformMatrix4fv(ColoredSurface3D.model_loc, true, ColoredSurface3D.model_mat.content);\n        gl.uniformMatrix4fv(ColoredSurface3D.proj_loc, true, gl.proj_mat.content);\n        gl.uniformMatrix4fv(ColoredSurface3D.view_loc, true, gl.cam.mat.content);\n        gl.uniform4fv(ColoredSurface3D.color_loc, color);\n        // let l_p = gl.cam.mat.multiplyVec4(new Vec3(gl.light_pos[0],\n        //     gl.light_pos[1],gl.light_pos[2]));\n        gl.uniform3fv(ColoredSurface3D.light_loc,gl.light_pos);\n        gl.uniform3fv(ColoredSurface3D.light_color_loc, gl.light_color);\n        // console.log(gl.cam.position.toArray());\n        gl.uniform3fv(ColoredSurface3D.cam_pos, gl.cam.position.toArray());\n\n        gl.uniform3fv(ColoredSurface3D.ambience_loc, gl.ambience);\n        gl.uniform3fv(ColoredSurface3D.shininess_loc, gl.shininess);\n        gl.uniform3fv(ColoredSurface3D.diffusion_loc, gl.diffusion);\n\n        gl.uniform1f(ColoredSurface3D.glossiness_loc, gl.glossiness);\n        gl.uniform1f(ColoredSurface3D.s_refl_c_loc, gl.specular_coefficient);\n\n\n        gl.bindVertexArray(this.vArray);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.iBuffer);\n        \n        gl.drawElements(gl.TRIANGLES, this.size, gl.UNSIGNED_SHORT, 0);\n        gl.bindVertexArray(null);\n        gl.useProgram(null);\n    }\n    init(gl){\n        let program = ColoredSurface3D.program = initShader(gl,ColoredSurface3D.vertexShader,ColoredSurface3D.fragmentShader);\n        gl.useProgram(program);\n        ColoredSurface3D.coord_loc = gl.getAttribLocation(program, 'coordinate');\n        ColoredSurface3D.normal_loc = gl.getAttribLocation(program, '_normal');\n        ColoredSurface3D.model_loc = gl.getUniformLocation(program, 'model');\n        ColoredSurface3D.color_loc = gl.getUniformLocation(program, 'color');\n        ColoredSurface3D.proj_loc = gl.getUniformLocation(program, 'projection');\n        ColoredSurface3D.view_loc = gl.getUniformLocation(program,'view');\n\n        ColoredSurface3D.light_loc       = gl.getUniformLocation(program, 'light_pos');\n        ColoredSurface3D.light_color_loc = gl.getUniformLocation(program, 'light_color');\n        ColoredSurface3D.ambience_loc    = gl.getUniformLocation(program, 'ambience_c');\n        ColoredSurface3D.diffusion_loc   = gl.getUniformLocation(program, 'diffusion_c');\n        ColoredSurface3D.shininess_loc   = gl.getUniformLocation(program, 'shininess_c');\n        ColoredSurface3D.cam_pos   = gl.getUniformLocation(program, 'cam_pos');\n\n        ColoredSurface3D.glossiness_loc   = gl.getUniformLocation(program, 'glosiness');\n        ColoredSurface3D.s_refl_c_loc     = gl.getUniformLocation(program, 's_refl_c');\n\n        // console.log({\n        //     program:program,\n        //     coord_loc:ColoredSurface3D.coord_loc,\n        //     normal_loc:ColoredSurface3D.normal_loc,\n        //     color_loc:ColoredSurface3D.color_loc,\n        //     model_loc:ColoredSurface3D.model_loc,\n        //     proj_loc :ColoredSurface3D.proj_loc ,\n        //     view_loc :ColoredSurface3D.view_loc ,\n        //     light_loc      :ColoredSurface3D.light_loc      ,  \n        //     light_color_loc:ColoredSurface3D.light_color_loc,\n        //     ambience_loc   :ColoredSurface3D.ambience_loc   ,\n        //     diffusion_loc  :ColoredSurface3D.diffusion_loc  ,\n        //     shininess_loc  :ColoredSurface3D.shininess_loc  ,\n        //     glossiness_loc :ColoredSurface3D.glossiness_loc ,\n        //     s_refl_c_loc   :ColoredSurface3D.s_refl_c_loc   ,\n        // })\n    }\n    deleteData(gl){\n       gl.deleteBuffer(this.vBuffer);\n       gl.deleteBuffer(this.iBuffer);\n       gl.deleteVertexArray(this.vArray);\n    }\n}\n\nColoredSurface3D.isInit = false;\nColoredSurface3D.model_mat = new Mat4f();\n\nColoredSurface3D.vertexShader =`attribute vec3 _normal;\n                                attribute vec3 coordinate;\n                                uniform mat4 model;\n                                uniform mat4 view;\n                                uniform mat4 projection;\n                                uniform vec4 color;\n                                uniform vec3 cam_pos;\n                                uniform vec3 light_pos;\n                                uniform vec3 light_color;\n                                uniform vec3 ambience_c, diffusion_c, shininess_c;//Per Channel\n                                uniform float glosiness, s_refl_c;\n                                varying vec4 vColor;\n                                void main(){\n                                    vec4 pos = view*(model* vec4(coordinate,1));\n\n                                    vec3 L = normalize(light_pos-coordinate);//Vector from pos to Light\n                                    vec3 E = normalize(cam_pos-coordinate);//Vector from pos to Eye\n                                    // L = vec3(view*(model*vec4(L,1)));\n                                    vec3 H = normalize(L+E);\n\n                                    vec3 N = normalize(_normal);\n                                    \n                                    //Cos(theta) of angle btwn normal and vector to light\n                                    float Kd = max(dot(L,N),0.0);\n\n                                    float Ks = s_refl_c*pow(max(dot(N,H),0.0),glosiness);\n\n                                    vec3 ambience = vec3(color)*ambience_c;\n                                    vec3 diffusion = vec3(color)*diffusion_c;\n                                    vec3 specular = Ks*light_color*shininess_c;\n                                    vColor = vec4((ambience+diffusion+specular),color.w);\n                                    \n                                    pos = projection*pos;\n                                    gl_Position = pos;//vec4(coordinate,1.0);\n                                }`;\n\nColoredSurface3D.fragmentShader =  `precision mediump float;\n                                    varying vec4 vColor;\n                                    void main(){\n                                        gl_FragColor = vColor;\n\n                                    }`;\n\nclass TexturedSurface3D{\n    constructor(setting,gl){\n        if(!TexturedSurface3D.isInit)\n            this.init(gl);\n        \n        this.vArray = gl.createVertexArray();\n        gl.bindVertexArray(this.vArray);\n        \n        this.vBuffer = GLStuffs.getVertexBufferFor(setting.vertices,gl);\n        \n        gl.vertexAttribPointer(TexturedSurface3D.coord_loc, 3, gl.FLOAT, true, 40, 0);\n        gl.enableVertexAttribArray(TexturedSurface3D.coord_loc);\n\n        gl.vertexAttribPointer(TexturedSurface3D.normal_loc, 3, gl.FLOAT, true, 40, 12);\n        gl.enableVertexAttribArray(TexturedSurface3D.normal_loc);\n\n\t    gl.vertexAttribPointer(TexturedSurface3D.color_loc, 4, gl.FLOAT, true, 40, 24);\n        gl.enableVertexAttribArray(TexturedSurface3D.color_loc);\n\n        this.iBuffer = GLStuffs.getIndexBufferFor(setting.indices, gl);\n        gl.bindVertexArray(null);\n        this.size = setting.indices.length;\n        console.log([this.vBuffer, this.iBuffer, this.size]);\n    }\n    update_vertices(vertices,gl){\n        gl.deleteBuffer(this.vBuffer);\n        this.vBuffer = GLStuffs.getVertexBufferFor(TexturedSurface3D.cord_loc, vertices,gl);\n    }\n    update_indices(indices,gl){\n        gl.deleteBuffer(this.iBuffer);\n        this.iBuffer = GLStuffs.getIndexBufferFor(indices,gl);\n        this.size = indices.length;\n    }\n    render(gl){\n        gl.useProgram(TexturedSurface3D.program);\n\n        gl.uniformMatrix4fv(TexturedSurface3D.model_loc, true, TexturedSurface3D.model_mat.content);\n        gl.uniformMatrix4fv(TexturedSurface3D.proj_loc, true, gl.proj_mat.content);\n        gl.uniformMatrix4fv(TexturedSurface3D.view_loc, true, gl.cam.mat.content);\n        gl.uniform3fv(TexturedSurface3D.light_loc, gl.light_pos);\n        gl.uniform3fv(TexturedSurface3D.light_color_loc, gl.light_color);\n        gl.uniform3fv(TexturedSurface3D.cam_pos, gl.cam.position.toArray());\n\n\n        gl.uniform3fv(TexturedSurface3D.ambience_loc, gl.ambience);\n        gl.uniform3fv(TexturedSurface3D.shininess_loc, gl.shininess);\n        gl.uniform3fv(TexturedSurface3D.diffusion_loc, gl.diffusion);\n\n        gl.uniform1f(TexturedSurface3D.glossiness_loc, gl.glossiness);\n        gl.uniform1f(TexturedSurface3D.s_refl_c_loc, gl.specular_coefficient);\n\n\n        gl.bindVertexArray(this.vArray);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.iBuffer);\n        \n        gl.drawElements(gl.TRIANGLES, this.size, gl.UNSIGNED_SHORT, 0);\n        gl.bindVertexArray(null);\n        gl.useProgram(null);\n    }\n    init(gl){\n        let program = TexturedSurface3D.program = initShader(gl,TexturedSurface3D.vertexShader,TexturedSurface3D.fragmentShader);\n        gl.useProgram(program);\n        TexturedSurface3D.coord_loc = gl.getAttribLocation(program, 'coordinate');\n        TexturedSurface3D.color_loc = gl.getAttribLocation(program, 'color');\n        TexturedSurface3D.normal_loc = gl.getAttribLocation(program, '_normal');\n        TexturedSurface3D.model_loc = gl.getUniformLocation(program, 'model');\n        TexturedSurface3D.proj_loc = gl.getUniformLocation(program, 'projection');\n        TexturedSurface3D.view_loc = gl.getUniformLocation(program,'view');\n        TexturedSurface3D.cam_pos       = gl.getUniformLocation(program, 'cam_pos');\n\n        TexturedSurface3D.light_loc       = gl.getUniformLocation(program, 'light_pos');\n        TexturedSurface3D.light_color_loc = gl.getUniformLocation(program, 'light_color');\n        TexturedSurface3D.ambience_loc    = gl.getUniformLocation(program, 'ambience_c');\n        TexturedSurface3D.diffusion_loc   = gl.getUniformLocation(program, 'diffusion_c');\n        TexturedSurface3D.shininess_loc   = gl.getUniformLocation(program, 'shininess_c');\n\n        TexturedSurface3D.glossiness_loc   = gl.getUniformLocation(program, 'glosiness');\n        TexturedSurface3D.s_refl_c_loc     = gl.getUniformLocation(program, 's_refl_c');\n\n        console.log({\n            program:program,\n            coord_loc:TexturedSurface3D.coord_loc,\n            normal_loc:TexturedSurface3D.normal_loc,\n            color_loc:TexturedSurface3D.color_loc,\n            model_loc:TexturedSurface3D.model_loc,\n            proj_loc :TexturedSurface3D.proj_loc ,\n            view_loc :TexturedSurface3D.view_loc ,\n            light_loc      :TexturedSurface3D.light_loc      ,  \n            light_color_loc:TexturedSurface3D.light_color_loc,\n            ambience_loc   :TexturedSurface3D.ambience_loc   ,\n            diffusion_loc  :TexturedSurface3D.diffusion_loc  ,\n            shininess_loc  :TexturedSurface3D.shininess_loc  ,\n            glossiness_loc :TexturedSurface3D.glossiness_loc ,\n            s_refl_c_loc   :TexturedSurface3D.s_refl_c_loc   ,\n        })\n    }\n    deleteData(gl){\n       gl.deleteBuffer(this.vBuffer);\n       gl.deleteBuffer(this.iBuffer);\n       gl.deleteVertexArray(this.vArray);\n    }\n}\n\nTexturedSurface3D.isInit = false;\nTexturedSurface3D.model_mat = new Mat4f();\n\nTexturedSurface3D.vertexShader =`attribute vec3 _normal;\n                                attribute vec3 coordinate;\n\t\t\t\t                attribute vec4 color;\n                                uniform mat4 model;\n                                uniform mat4 view;\n                                uniform mat4 projection;\n                                uniform vec3 light_pos;\n                                uniform vec3 light_color;\n                                uniform vec3 cam_pos;\n                                uniform vec3 ambience_c, diffusion_c, shininess_c;//Per Channel\n                                uniform float glosiness, s_refl_c;\n                                varying vec4 vColor;\n                                void main(){\n                                    vec4 pos = view*(model* vec4(coordinate,1));\n\n                                    vec3 L = normalize(light_pos-coordinate);//Vector from pos to Light\n                                    vec3 E = normalize(cam_pos-coordinate);//Vector from pos to Eye\n                                    // L = vec3(view*(model*vec4(L,1)));\n                                    vec3 H = normalize(L+E);\n\n                                    vec3 N = normalize(_normal);\n                                    \n                                    //Cos(theta) of angle btwn normal and vector to light\n                                    float Kd = max(dot(L,N),0.0);\n\n                                    float Ks = s_refl_c*pow(max(dot(N,H),0.0),glosiness);\n\n                                    vec3 ambience = vec3(color)*ambience_c;\n                                    vec3 diffusion = vec3(color)*diffusion_c;\n                                    vec3 specular = Ks*light_color*shininess_c;\n                                    vColor = vec4((ambience+diffusion+specular),color.w);\n                                    \n                                    pos = projection*pos;\n                                    gl_Position = pos;//vec4(coordinate,1.0);\n                                }`;\n\nTexturedSurface3D.fragmentShader =  `precision mediump float;\n                                    varying vec4 vColor;\n                                    void main(){\n                                        gl_FragColor = vColor;\n\n                                    }`;\nexport{\n    Grid3D,\n    FilledShape3D,\n    get_textured_cube,\n    get_colored_surface,\n    ColoredSurface3D,\n    TexturedSurface3D,\n}\n\n// ((1+0.5*cos(u))*cos(v),(1+0.5*cos(u))*sin(v),0.5*sin(u))","import React, { Component } from 'react';\nimport nextId from 'react-id-generator';\n\nclass SimpleSlider extends Component {\n    state = { value: 0}\n    constructor(props){\n        super(props);\n        this.ref = React.createRef();\n    }\n    handleChange=()=>{\n        this.props.passChange(this.props.setting, this.ref.current.value);\n    }\n    render() {\n        return (\n            <div>\n            <label className='label-medium-left'>\n            {`${this.props.setting.name} ${(Number(this.props.setting.val)).toFixed(1)}`}\n            </label>\n            <input ref={this.ref} type='range' \n            min= {this.props.setting.min}\n            max= {this.props.setting.max}\n            step = '0.1' \n            onChange={this.handleChange}\n            className='full-slider' \n            defaultValue={this.props.setting.val}/>\n            </div>\n        );\n    }\n}\n\nexport default SimpleSlider;","import React, { Component } from 'react';\nimport SimpleSlider from './SimpleSlider';\n\nclass Tab extends Component {\n\n    constructor(props){\n        super(props);\n        this.near = React.createRef();\n        this.far = React.createRef();\n        this.top = React.createRef();\n        this.bottom = React.createRef();\n        this.right = React.createRef();\n        this.left = React.createRef();\n    }\n\n    handleChange(type,target){\n        this.props.funct(type,target.current.value);\n    }\n\n    getForLBN(){\n        return (<div>\n            <label htmlFor='near' className='label-medium-left'>\n             Near {(Number(this.props.setting.near)).toFixed(1)}\n            </label>\n            <input ref={this.near} type='range' min='0.1' max='10' step='0.1' id='near' \n                onChange={this.handleChange.bind(this,'near',this.near)}\n                className='full-slider' defaultValue={this.props.setting.near}/>\n            \n            <label htmlFor='far' className='label-medium-left'>\n             Far {(Number(this.props.setting.far)).toFixed(1)}\n            </label>\n            <input ref={this.far} type='range' min='10' max='20' step='0.1' id='far' \n                onChange={this.handleChange.bind(this,'far',this.far)}\n                className='full-slider'defaultValue={this.props.setting.far}/>\n\n            <label htmlFor='left' className='label-medium-left'>\n             Left {(Number(this.props.setting.left)).toFixed(1)}\n            </label>\n            <input ref={this.left} type='range' min='-20' max='20' step='0.1' id='left' \n                onChange={this.handleChange.bind(this,'left',this.left)}\n                className='full-slider' defaultValue={this.props.setting.left}/>\n            \n            <label htmlFor='right' className='label-medium-left'>\n             Right {(Number(this.props.setting.right)).toFixed(1)}\n            </label>\n            <input ref={this.right} type='range' min='-20' max='20' step='0.1' id='right' \n                onChange={this.handleChange.bind(this,'right',this.right)}\n                className='full-slider' defaultValue={this.props.setting.right}/>\n            \n            <label htmlFor='top' className='label-medium-left'>\n             Top {(Number(this.props.setting.top)).toFixed(1)}\n            </label>\n            <input ref={this.top} type='range' min='-20' max='20' step='0.1' id='top' \n                onChange={this.handleChange.bind(this,'top',this.top)}\n                className='full-slider' defaultValue={this.props.setting.top}/>\n            \n            <label htmlFor='bottom' className='label-medium-left'>\n             Bottom {(Number(this.props.setting.bottom)).toFixed(1)}\n            </label>\n            <input ref={this.bottom} type='range' min='-20' max='20' step='0.1' id='bottom' \n                onChange={this.handleChange.bind(this,'bottom',this.bottom)}\n                className='full-slider' defaultValue={this.props.setting.bottom}/>\n        </div>);\n    }\n\n    handleSlider =(setting, value)=>{\n        this.props.funct(setting.name, value);\n    }\n\n    getThings(){\n        let a = [];\n        for(let key in this.props.setting.sliders){\n            let dict = this.props.setting.sliders[key];\n            let setting = {name:key}\n            setting = Object.assign({}, setting, dict);\n            a.push(<SimpleSlider setting={setting} key={key} passChange={this.handleSlider}/>);\n        }\n        return a;\n    }\n\n    render() {\n        return (\n            <div>\n            <fieldset className='setting-fieldset'>\n            <legend>{this.props.setting.name}</legend>\n                {this.getThings()}\n            </fieldset>\n            </div>\n        );\n    }\n}\n\nexport default Tab;","import React, { Component } from 'react';\nimport nextId from 'react-id-generator';\n\nclass MainTab extends Component {\n    changeTab(val){\n        this.props.changeTab(val);\n    }\n    render(){\n        return this.props.content.map((val)=>{\n           return (\n                <div key={nextId()}>\n                    <input type='button'  value={val} className=\"rounded-center-button\" \n                        onClick = {this.changeTab.bind(this,val)}/>\n                </div>\n           )\n        });\n    };\n}\n\nexport default MainTab;","import React, { Component } from 'react';\nimport Tab from './setting_comp/Tab';\nimport { Mat4f, Cam,Vec3 } from '../math/math';\nimport MainTab from './setting_comp/MainTab';\n\nclass PlotSpaceSetting extends Component {\n\n    changePrespective=(type, value)=>{\n        let p = this.state.prespective;\n        p.sliders[type].val = Number(value);\n        this.setState({prespective: p});\n        p = p.sliders;\n\n        this.props.parent.gl.proj_mat = Mat4f.getPres(p.left.val,p.bottom.val,p.near.val, p.right.val,p.top.val,p.far.val);\n        this.props.parent.render3D();\n    }\n    changePrespectiveAOV=(type, value)=>{\n        let p = this.state.prespectiveaov;\n        p.sliders[type].val = Number(value);\n        this.setState({prespectiveaov: p});\n        p = p.sliders;\n\n        this.props.parent.gl.proj_mat = Mat4f.getPresSymmetric(p.near.val,p.far.val,p.aspect.val,p.aov.val);\n        this.props.parent.render3D();\n    }\n    changeOrtho=(type, value)=>{\n        let p = this.state.orthographic;\n        p.sliders[type].val = Number(value);\n        this.setState({orthographic: p});\n        p = p.sliders;\n\n        this.props.parent.gl.proj_mat = Mat4f.getOrtho(p.left.val,p.bottom.val,p.near.val, p.right.val,p.top.val,p.far.val);\n        this.props.parent.render3D();\n    }\n    changeCamera=(type,value)=>{\n        let p = this.state.camera;\n        p.sliders[type].val = Number(value);\n        this.setState({camera: p});\n        p = p.sliders;\n        let target = new Vec3(p.targetx.val,p.targety.val,p.targetz.val);\n        let position = new Vec3(p.positionx.val,p.positiony.val,p.positionz.val);\n        let up = new Vec3(p.upx.val,p.upy.val,p.upz.val);\n        this.props.parent.gl.cam = new Cam(target,position,up);\n        this.props.parent.render3D();\n    }\n    changeCameraAngle=(type,value)=>{\n        let p = this.state.cameraAngle;\n        let angle = (value-p.sliders[type].val)*Math.PI/180.0;\n        p.sliders[type].val = Number(value);\n        this.setState({cameraAngle: p});\n        \n        \n        \n        switch(type){\n            case 'pitch':\n                this.props.parent.gl.cam.pitch(angle);\n            break;\n            case 'roll':\n                this.props.parent.gl.cam.roll(angle);\n            break;\n            case 'yaw':\n                this.props.parent.gl.cam.yaw(angle);\n            break;\n        }\n        \n        this.props.parent.render3D();\n    }\n    changeLightPos=(type,value)=>{\n        value = parseFloat(value);\n        let p = this.state.lightPos;\n        p.sliders[type].val = value;\n        this.setState({lightPos:p});\n        if(type==='x'){\n            this.props.parent.gl.light_pos[0] = value;\n        }else if(type==='y'){\n            this.props.parent.gl.light_pos[1] = value;\n        }else if(type==='z'){\n            this.props.parent.gl.light_pos[2] = value;\n        }\n        this.props.parent.render3D();\n    }\n    changeLightColor=(type,value)=>{\n        let p = this.state.lightColor;\n        p.sliders[type].val = value;\n        this.setState({lightColor:p});\n        if(type==='R'){\n            this.props.parent.gl.light_color[0] = value;\n        }else if(type==='G'){\n            this.props.parent.gl.light_color[1] = value;\n        }else if(type==='B'){\n            this.props.parent.gl.light_color[2] = value;\n        }\n        this.props.parent.render3D();\n    }\n    changeDiffusion=(type,value)=>{\n        let p = this.state.diffusion;\n        p.sliders[type].val = value;\n        this.setState({diffusion:p});\n        if(type==='R'){\n            this.props.parent.gl.diffusion[0] = value;\n        }else if(type==='G'){\n            this.props.parent.gl.diffusion[1] = value;\n        }else if(type==='B'){\n            this.props.parent.gl.diffusion[2] = value;\n        }\n        this.props.parent.render3D();\n    }\n    changeShininess=(type,value)=>{\n        let p = this.state.shininess;\n        p.sliders[type].val = value;\n        this.setState({shininess:p});\n        if(type==='R'){\n            this.props.parent.gl.shininess[0] = value;\n        }else if(type==='G'){\n            this.props.parent.gl.shininess[1] = value;\n        }else if(type==='B'){\n            this.props.parent.gl.shininess[2] = value;\n        }\n        this.props.parent.render3D();\n    }\n    changeConstants=(type,value)=>{\n        value = parseFloat(value);\n        let p = this.state.Constants;\n        p.sliders[type].val = value;\n        this.setState({Constants:p});\n        if(type==='Glossiness'){\n            this.props.parent.gl.glossiness = value;\n        }else if(type==='SpecularCoefficient'){\n            this.props.parent.gl.specular_coefficient = value;\n        }else if(type==='Alpha'){\n            this.props.parent.status.alpha = value;\n        }\n        this.props.parent.render3D();\n    }\n    \n    state = {\n        is_main:true,\n        is_visible:false,\n        current: 'cameraAngle',\n        prespective:{\n            name:'Prespective lbn,rtf',\n            funct: this.changePrespective,\n            sliders:{\n                'near':{'min': 0.1, 'max':10, 'val':0.1},\n                'far':{'min': 1, 'max':100, 'val':10},\n                'left':{'min': -100, 'max':100, 'val':10},\n                'right':{'min': -100, 'max':100, 'val':10},\n                'bottom':{'min': -100, 'max':100, 'val':10},\n                'top':{'min': -100, 'max':100, 'val':10},\n            }\n        },\n        orthographic:{\n            name:'Orthographic lbn,rtf',\n            funct: this.changeOrtho,\n            sliders:{\n                'near':{'min': -100, 'max':100, 'val':-10},\n                'far':{'min': -100, 'max':100, 'val':10},\n                'left':{'min': -100, 'max':100, 'val':-10},\n                'right':{'min': -100, 'max':100, 'val':10},\n                'bottom':{'min': -100, 'max':100, 'val':-10},\n                'top':{'min': -100, 'max':100, 'val':10},\n            } \n        },\n        orthosymmetric:{\n            name:\"Ortho Symmetric\",\n            sliders:{\n                aspect:{min:0.1,max:5,val:1},\n                half_len:{min:1,max:200,val:10},\n            },\n        },\n        prespectiveaov:{\n            name:'Prespective AOV',\n            funct:this.changePrespectiveAOV,\n            sliders:{\n                aov:{min:45, max:89, val:45},\n                aspect:{min:0.1,max:4, val:1},\n                near:{min:0.1, max:10,val:1},\n                far:{min:1,max:100,val:10}\n            }\n        },\n        camera:{\n            name:'Camera Coords',\n            funct:this.changeCamera,\n            sliders:{\n                targetx:{min:-10,max:10,val:0},\n                targety:{min:-10,max:10,val:0},\n                targetz:{min:-10,max:10,val:0},\n                positionx:{min:-10,max:10,val:1},\n                positiony:{min:-10,max:10,val:1},\n                positionz:{min:-10,max:10,val:1},\n                upx:{min:-10,max:10,val:1},\n                upy:{min:-10,max:10,val:1},\n                upz:{min:-10,max:10,val:1},\n\n            }\n        },\n        cameraAngle:{\n            name:'Camera Angle',\n            funct:this.changeCameraAngle,\n            sliders:{\n                pitch:{min:-180,max:180,val:0},\n                yaw:{min:-180,max:180,val:0},\n                roll:{min:-180,max:180,val:0},\n            }\n        },\n        lightPos:{\n            name:'Light Position',\n            funct:this.changeLightPos,\n            sliders:{\n                x:{min:-20,max:20,val:10},\n                y:{min:-20,max:20,val:10},\n                z:{min:-20,max:20,val:10},\n            }\n        },\n        lightColor:{\n            name:'Light Color',\n            funct:this.changeLightColor,\n            sliders:{\n                R:{min:0,max:1,val:1},\n                G:{min:0,max:1,val:1},\n                B:{min:0,max:1,val:1},\n            }\n        },\n        diffusion:{\n            name:'Diffusion',\n            funct:this.changeDiffusion,\n            sliders:{\n                R:{min:0,max:1,val:0.4},\n                G:{min:0,max:1,val:0.4},\n                B:{min:0,max:1,val:0.4},\n            } \n        },\n        shininess:{\n            name:'Shininess',\n            funct:this.changeShininess,\n            sliders:{\n                R:{min:0,max:1,val:0.5},\n                G:{min:0,max:1,val:0.5},\n                B:{min:0,max:1,val:0.5},\n            } \n        },\n        Constants:{\n            name:'Constants',\n            funct:this.changeConstants,\n            sliders:{\n                Glossiness:{min:0,max:100,val:20},\n                SpecularCoefficient:{min:0,max:1,val:0.4},\n                Alpha:{min:0,max:1,val:1},\n            }\n        },\n        maintabs:[  'prespective',\n                    'orthographic',\n                    'prespectiveaov',\n                    'camera',\n                    'cameraAngle', \n                    'lightPos',\n                    'lightColor',\n                    'diffusion',\n                    'shininess',\n                    'Constants',\n                ],\n        dum:100,\n    }\n\n    toggleInput(){\n        this.setState({is_visible: !this.state.is_visible});\n    }\n    goBackToMain(){\n        this.setState({is_main:true});\n    }\n    toggleViewType(){\n        this.props.parent.status.is_ortho = !this.props.parent.status.is_ortho;\n        this.props.parent.setCamera();\n        this.props.parent.setMatrix();\n        this.props.parent.render3D();\n        this.setState({dum: 1000});\n    }\n    changeTab = (which)=>{\n        this.setState({current: which});\n        this.setState({is_main: false});\n    }\n    toggleAxis(){\n        this.props.parent.status.show_axis = !this.props.parent.status.show_axis;\n        this.props.parent.render3D();\n        this.setState({dum: 100});\n    }\n    render(){\n        return(\n            <div className='fixed-div-20'>\n            {\n                this.state.is_visible?\n                <div>\n                    <input type='button' className='toggleBtn' value='>>' onClick={this.toggleInput.bind(this)}/>\n                    <input type='button' className='rounded-right-small-button'\n                            onClick={this.goBackToMain.bind(this)} value=\"Main\"/>\n                    <input type='button' className='rounded-right-small-button'\n                        onClick={this.toggleAxis.bind(this)} defaultValue={ this.props.parent.status.show_axis?'Hide Axis':'Show Axis'}/>\n                    <input type='button' className='rounded-right-small-button'\n                        onClick={this.toggleViewType.bind(this)} defaultValue={ this.props.parent.status.is_ortho?'Prespective':'Orthographic'}/>\n                    {\n                        this.state.is_main?\n                        <MainTab content={this.state.maintabs} changeTab={this.changeTab}/>\n                        :\n                        <div>\n                        <Tab setting={this.state[this.state.current]} funct={this.state[this.state.current].funct} />\n                        </div>\n                    }\n                </div>\n                :<input type='button' className='toggleBtn' value='<<' \n                    onClick={this.toggleInput.bind(this)} />\n            }\n            </div>\n        )\n    }\n}\n\nexport default PlotSpaceSetting;","import React, { Component } from 'react';\nimport {get_textured_cube,Grid3D, TexturedSurface3D, ColoredSurface3D} from './primitive'\nimport {Mat4f,Cam, Vec3} from '../math/math'\nimport PlotSpaceSetting from './PlotSpaceSetting'\nimport Symbol from '../math/symbol1'\n\nclass PlotSpace extends Component {\n    w_frac = 0.75;\n    status = {\n        x_center: 0,\n        y_center: 0,\n        z_center: 0,\n\n        x_step: 0.2,\n        y_step: 0.2,\n        z_step: 0.2,\n        alpha: 1,\n        show_axis:true,\n        is_ortho:false,\n        aspect:1,\n        orthographic:{\n            half_len:10,\n        },\n        prespective:{\n            near:0.1,\n            far:100,\n            aov:50,\n        }\n    }\n\n    objects = [];\n\n    constructor(props){\n        super(props);\n        this.canvas = React.createRef();\n        this.gl = null;\n        this.clicked = false;\n        this.lastX = 0;\n        this.lastY = 0;\n        this.lastTime = 0;\n        this.a_canvas = React.createRef();\n        this.set = React.createRef();\n    }\n\n    onkeydown(e){\n\n    }\n\n    onMouseMove(e){\n        \n        if(this.clicked===true){\n            if((new Date()).getTime()-this.lastTime<30)\n                return;\n\n            let dx = (e.pageX-this.lastX)/this.canvas.current.width*2*Math.PI;\n            let dy = (e.pageY-this.lastY)/this.canvas.current.height*2*Math.PI;\n\n            this.gl.cam.rotateX(dy);\n            this.gl.cam.rotateZ(-dx);\n\n            this.lastX = e.pageX;\n            this.lastY = e.pageY;\n\n            this.gl.clearDepth(1.0);\n\n            //this.updateDimensions();\n            this.lastX = e.pageX;\n            this.lastY = e.pageY;\n            this.lastTime = (new Date()).getTime();\n            this.render3D();\n        }\n    }\n\n    render3D=()=>{\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT);\n        if(this.status.show_axis)\n            this.grid.render(this.gl);\n        for(let i=0;i<this.props.inputs.length;i++){\n            let input = this.props.inputs[i];\n            if(!input.visible)\n                continue;\n            if(input.type==='equation'&&input.fp!==null){\n                if(input.object3D===null||input.object3D===undefined){\n                    let setting = Symbol.get3DMesh(input.fp, \n                        this.props.getValueArray(this.props.inputs),\n                        this.status.orthographic.half_len);\n                    if(setting === null||setting === undefined)\n                        continue;\n                    input.object3D = new ColoredSurface3D(setting, this.gl);\n                }\n                input.object3D.render(this.gl,this.getColor(input.color));\n            }else if(input.type==='file'){\n                if(input.object!==null){\n                    if(input.object3D===null||input.object3D===undefined){\n                        if(input.object.textured){\n                            input.object3D = new TexturedSurface3D(input.object, this.gl);    \n                            console.log(\"Textured\");\n                        }else\n                            input.object3D = new ColoredSurface3D(input.object, this.gl);\n                    }else\n                        input.object3D.render(this.gl,this.getColor(input.color));\n                }\n                    \n            }\n        }\n        // console.log(this.gl.getError());\n        // for(let obj of this.objects)\n        //     obj.render(this.gl,[1,0,0,1]);\n    }\n\n    getColor(str){\n        let m = 0;\n        let r = (parseInt(str.substr(1,2),16))/255;\n        let g = parseInt(str.substr(3,2),16)/255;\n        let b = parseInt(str.substr(5,2),16)/255;\n        return [r,g,b,this.status.alpha];\n    }\n    \n    onMouseDown(e){\n        if(this.clicked===false){\n            this.clicked = true;\n            this.lastX = e.pageX;\n            this.lastY = e.pageY;\n            this.lastTime = (new Date()).getTime();\n        }\n    }\n    \n    onMouseUp(e){\n        this.clicked = false;\n    }\n\n    onMouseOut(e){\n        this.clicked = false;\n    }\n\n    onWheel(e){\n        if(this.status.is_ortho){\n            this.status.orthographic.half_len += 0.005*e.deltaY;\n            if(this.status.orthographic.half_len>40)\n                 this.status.orthographic.half_len = 40;  \n            else if(this.status.orthographic.half_len<0.1)\n                this.status.orthographic.half_len += 0.1;\n        }else{\n            this.status.prespective.aov += 0.01*e.deltaY;\n            if(this.status.prespective.aov>89)\n                this.status.prespective.aov = 89;\n            else if(this.status.prespective.aov<30)\n                this.status.prespective.aov = 30;\n        }\n        this.setMatrix();\n        this.render3D();\n    }\n\n    setMatrix=()=>{\n        if(this.status.is_ortho){\n            this.gl.proj_mat = Mat4f.getOrthoSymmetric(this.status.orthographic.half_len, \n                    this.status.aspect);\n        }else{\n            let p = this.status.prespective;\n            this.gl.proj_mat = Mat4f.getPresSymmetric(p.near, p.far, \n                    this.status.aspect, p.aov);\n        }\n    }\n    \n    setCamera=()=>{\n        if(this.status.is_ortho){\n            this.gl.cam = new Cam(new Vec3(0,0,0), new Vec3(0,0,1), new Vec3(1,0,0)); \n        }else{\n            this.gl.cam = new Cam(new Vec3(0,0,0), new Vec3(0,0,10), new Vec3(1,0,0));\n        }\n    }\n\n    updateDimensions(w_frac = null){\n        if(this.canvas.current===null)\n            return;\n        if(w_frac!==null)\n            this.w_frac = w_frac;\n        \n        this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT);\n        this.canvas.current.height =window.innerHeight;\n        this.canvas.current.width = this.w_frac*window.innerWidth;\n\n        this.gl.viewport(0,0,this.canvas.current.width,this.canvas.current.height);\n\n        this.status.aspect = this.canvas.current.height/this.canvas.current.width;\n        this.setMatrix();\n        this.render3D();\n    }\n\n    componentDidMount(){\n        this.canvas.current.height =window.innerHeight;\n        this.canvas.current.width = 0.75*window.innerWidth;\n        this.status.aspect = this.canvas.current.height/this.canvas.current.width;\n        this.gl = this.canvas.current.getContext('webgl2');\n        \n        this.gl.light_pos = [10,10,10];\n        this.gl.light_color = [1,1,1];\n        this.gl.ambience = [0.5,0.5,0.5];\n        this.gl.diffusion = [0.5,0.5,0.5];\n        this.gl.shininess = [0.5,0.5,0.5];\n        this.gl.glossiness = 0.4;\n        this.gl.specular_coefficient = 1;\n\n        this.gl.cam = new Cam(new Vec3(0,0,0), new Vec3(0,0,10), new Vec3(1,0,0));\n        \n        this.gl.clearColor(1,1,1,1);\n        this.gl.enable(this.gl.DEPTH_TEST);\n    \n        this.gl.enable(this.gl.BLEND);\n        this.gl.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n\n        this.gl.viewport(0,0,this.canvas.current.width,this.canvas.current.height);\n\n        this.setMatrix();\n        \n        // let setting = {\n        //                 coords: [-100,-100,0, \n        //                           100,-100,0,\n        //                           100, 100,0,\n        //                          -100, 100,0\n        //                         ],\n        //                 color:[200,200,200,255]\n        //               }\n\n        // this.objects.push(this.get_cube_with_random_color(-0.4,-0.4,-0.4, 0.4,0.4,0.4))\n\n        this.grid = new Grid3D(this.gl);\n\n\n        this.render3D();\n\n        window.addEventListener(\"resize\", this.updateDimensions.bind(this,null));\n        window.addEventListener(\"keydown\", this.onKeyDown.bind(this));\n    }\n\n    get_cube_with_random_color(l,b,n, r,t,f){\n        let setting =  {\n            coords: [l,b,n, r,t,f],\n            texture:{\n                width : [1, 1, 1, 1, 1, 1, ],\n                height : [1, 1, 1, 1, 1, 1, ],\n                data: [\t\n                        [255*Math.random(),255*Math.random(),255*Math.random(),150],\n                        [255*Math.random(),255*Math.random(),255*Math.random(),150],\n                        [255*Math.random(),255*Math.random(),255*Math.random(),150],\n                        [255*Math.random(),255*Math.random(),255*Math.random(),150],\n                        [255*Math.random(),255*Math.random(),255*Math.random(),150],\n                        [255*Math.random(),255*Math.random(),255*Math.random(),150],\n                      ]\n            },\n        } \n        return get_textured_cube(this.gl,setting);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateDimensions.bind(this,null));\n    }\n\n    onKeyDown(e){\n        if(e.key==='w'){\n            this.gl.cam.dispTarget(+0.05);\n        }else if(e.key==='s'){\n            this.gl.cam.dispTarget(-0.05);\n        }\n        this.render3D();\n    }\n\n    render() {\n        return (\n            <div>\n                <canvas ref={this.canvas}\n                onMouseDown={this.onMouseDown.bind(this)}\n                onMouseUp={this.onMouseUp.bind(this)}\n                onMouseMove={this.onMouseMove.bind(this)}\n                onMouseOut={this.onMouseOut.bind(this)}\n                onWheel={this.onWheel.bind(this)}\n                onKeyDown={this.onKeyDown.bind(this)}\n                ></canvas>\n                <PlotSpaceSetting parent={this}></PlotSpaceSetting>\n            </div>\n        );\n    }\n}\n\nexport default PlotSpace;","import React, { Component } from 'react';\nimport PlotCanvas from './components/graphics/PlotCanvas';\nimport NavBar from './components/ui/NavBar';\nimport InputPanel from './components/ui/InputPanel';\nimport nextId from 'react-id-generator'\nimport './components/style.css'\nimport Symbol from './components/math/symbol1'\nimport PlotSpace from './components/graphics/PlotSpace';\n\n\nconst canvas_width_with_input = 0.80;\nconst canvas_width_without_input = 0.9999;\nconst def_slider_min = 0;\nconst def_slider_max = 1;\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.input_ref = React.createRef();\n    this.canvas_ref = React.createRef();\n    this.u_id = nextId();\n    this.lastTime = new Date().getTime();\n  }\n\n  componentDidMount(){\n    document.body.addEventListener('wheel', function(e) {\n      e.preventDefault();  \n    }, {passive: false});\n  }\n\n  getPositionOfInput = (input_id)=>{\n    for(let pos=0;pos<this.state.inputs.length;){\n        let input = this.state.inputs[pos];\n        if(input.id === input_id)\n            return pos;\n        pos++;\n    }\n    return -1;\n  }\n\n  changeSlider = (input_id, new_value, new_min, new_max,name)=>{\n    let pos = this.getPositionOfInput(input_id);\n    let newSlider = {\n      id: input_id,\n      type:'slider',\n      min: new_min,\n      max: new_max,\n      name: name,\n      value: parseFloat(new_value),\n    };\n\n    this.state.inputs.splice(pos,1);\n    this.state.inputs.splice(pos, 0, newSlider);\n    this.setState({dum: 100});\n    this.canvas_ref.current.updateDimensions();\n  }\n\n  state ={\n    canvas:{\n      h_frac: 0.95,\n      w_frac: 0.75\n    },\n    input_visible: true,\n    rightSectionStyle: {float:'right',width:'75%'},\n    inputs:[],\n    dum: 0,\n    is2D:true,\n  }\n\n  added_slider = [];\n  getValueArray=(parm)=>{\n    let val = Array(parm.length);\n    for(let j=0;j<this.state.inputs.length;j++){\n      let input = this.state.inputs[j];\n      let i = parm.indexOf(input.name);\n      if(i>=0){\n        val[i] = input.value;\n      }\n    }\n    return val;\n  }\n\n  addSlider=(name, input_id)=>{\n    let newSlider = {\n        id: nextId(),\n        type: 'slider',\n        min: def_slider_min,\n        max: def_slider_max,\n        name: name,\n        value: 1.0,\n    }\n\n    this.added_slider.push(name);\n\n    let pos = this.getPositionOfInput(input_id);\n\n    //This is done so that slider lies below the equation input_id is of equation\n    this.state.inputs[pos].sliders.splice(this.state.inputs[pos].sliders.indexOf(name),1);\n\n    //This statement is required to notify that state has been changed\n    this.setState({dum: 1});\n\n    this.state.inputs.splice(pos+1,0,newSlider);\n    \n    //We will also need to remove sliders form other equation inputs if there are any\n    for(let i=0;i<this.state.inputs.length;i++){\n      if(this.state.inputs[i].type==='equation'){\n        let index = this.state.inputs[i].sliders.indexOf(name)\n        if(index!==-1){\n          this.state.inputs[i].sliders.splice(index,1);\n        }\n      }\n    }\n\n    this.canvas_ref.current.updateDimensions();\n  }\n\n  addEquation = ()=>{\n    let newEquation = {\n      id:  nextId(),\n      type:'equation',\n      value:'',\n      sliders: [],\n      error:'',\n      color: \"#000000\".replace(/0/g,function(){return (~~(Math.random()*16)).toString(16);}),\n      fp:null,\n      visible:true,\n    }\n    if(!this.state.is2D)\n      newEquation.object3D = null;\n    this.state.inputs.splice(0,0,newEquation);\n    this.setState({dum:100});\n  }\n\n  getAppropriateSliders(fp){\n    let sliders = [];\n    for(let i=0;i<fp.parm.length;i++){\n      let parm = fp.parm[i];\n      if(this.added_slider.indexOf(parm)===-1)\n        sliders.push(parm);\n    }\n    if(fp.type==='parametric'){\n      if(this.state.is2D)\n        sliders = sliders.filter((val)=>val!=='t');\n      else{\n        sliders = sliders.filter((val)=>val!=='u'&&val!=='v');\n      }\n    }\n    else if(fp.type==='implicit'||fp.type==='explicit'){\n      if(this.state.is2D)\n        sliders = sliders.filter((val)=>val!=='x'&&val!=='y');\n      else\n        sliders = sliders.filter((val)=>val!=='x'&&val!=='y'&&val!=='z');\n    }\n    return sliders;\n  }\n\n  updateEquation = (input_id,text,color,visible=true)=>{\n    if((new Date().getTime())-this.lastTime <100)\n      return;\n    else{\n      this.lastTime = (new Date()).getTime();\n    }\n\n    let pos = this.getPositionOfInput(input_id);\n    let newEquation = this.state.inputs[pos];\n    newEquation.color = color;\n    newEquation.visible = visible;\n    let fp = null;\n    \n    if(text!==''){\n      if(text!==newEquation.value){\n        newEquation.value = text;\n        try{\n          fp = Symbol.getJSFunction(text,!this.state.is2D);\n        }catch(e){}\n        if(fp!==null){\n          newEquation.fp = fp;\n          newEquation.sliders = this.getAppropriateSliders(fp);\n          newEquation.sliderscopy = Array.from(newEquation.sliders); //Copy needed for good reasons\n          newEquation.error = '';\n          if(!this.state.is2D){\n            if(newEquation.object3D!==null&&newEquation.object3D!==undefined)\n              newEquation.object3D.deleteData(this.canvas_ref.current.gl);\n            newEquation.object3D = null;\n          }\n        }else{\n          newEquation.error = 'Error';\n          newEquation.fp = null;\n        }\n      }\n    }else{\n      newEquation.error = '';\n      newEquation.fp = null;\n    }\n\n    this.state.inputs.splice(pos+1,0,newEquation);\n    this.state.inputs.splice(pos,1);\n    this.setState({dum:100});\n    this.canvas_ref.current.updateDimensions();\n  }\n\n  removeInput = (input_id)=>{\n    if(this.state.inputs.length===0)\n      return;\n    let pos;\n    pos = this.getPositionOfInput(input_id);\n    if(pos===-1)\n      pos=0;\n    if(this.state.inputs[pos].type==='slider'){\n      let n = this.state.inputs[pos].name;\n      this.added_slider = this.added_slider.filter((val)=>val!==n);\n      \n      for(let i=0;i<this.state.inputs.length;i++){\n        if(this.state.inputs[i].type==='equation'){\n          let index = this.state.inputs[i].sliderscopy.indexOf(n)\n          if(index!==-1){\n            this.state.inputs[i].sliders.push(n);\n          }\n        }\n      }\n    }else if(this.state.is3D){\n      if(this.state.inputs[pos].object3D!==null||this.state.inputs[pos].object3D!==undefined)\n        this.state.inputs[pos].object3D.deleteData(this.canvas_ref.current.gl);\n    }\n\n\n    this.state.inputs.splice(pos,1);\n    this.setState({dum:100});\n    this.canvas_ref.current.updateDimensions();\n  }\n\n  parametricChange = (input_id, name, min,  max)=>{\n    let pos = this.getPositionOfInput(input_id);\n    let newEquation = this.state.inputs[pos];\n    if(this.state.is2D){\n      newEquation.fp.min = parseFloat(min);\n      newEquation.fp.max = parseFloat(max);\n    }else{\n      newEquation.fp[name].min = parseFloat(min);\n      newEquation.fp[name].max = parseFloat(max);\n      newEquation.object3D.deleteData(this.canvas_ref.current.gl);\n      newEquation.object3D = null;\n    }\n    console.log(\"Parametric Change\");\n    this.state.inputs.splice(pos+1,0,newEquation);\n    this.state.inputs.splice(pos,1);\n    this.setState({dum:100});\n    this.canvas_ref.current.updateDimensions();\n  }\n\n  toggle_input(){\n    if(this.state.input_visible){\n      this.setState({input_visible: false})\n      this.setState({rightSectionStyle: {float:'right',width:'100%'}});\n      this.canvas_ref.current.updateDimensions(canvas_width_without_input);\n    }else{\n      this.setState({input_visible: true})\n      this.setState({rightSectionStyle: {float:'right',width:'75%'}});\n      this.canvas_ref.current.updateDimensions(canvas_width_with_input);\n    }\n  }\n\n  toggleDim=()=>{\n    this.setState({is2D:!this.state.is2D});\n    this.toggle_input(); \n  }\n\n  updateFile=(input_id, color=null,obj=null,name=null,visible=null)=>{\n    let pos = this.getPositionOfInput(input_id);\n    let file = this.state.inputs[pos];\n    if(name!==null)\n      file.name = name;\n    if(color!==null)\n      file.color = color;\n    if(obj!==null)\n      file.object = obj;\n    if(visible!==null)\n      file.visible = visible;\n\n    this.state.inputs.splice(pos+1,0,file);\n    this.state.inputs.splice(pos,1);\n    this.setState({dum:100});\n    this.canvas_ref.current.updateDimensions();\n  }\n\n  addFile=()=>{\n    let file={\n      type:'file',\n      id:nextId(),\n      name:'Choose a file',\n      object:null,\n      color:\"#000000\".replace(/0/g,function(){return (~~(Math.random()*16)).toString(16);}),\n      drawn:false,\n      visible:true,\n    }\n    this.state.inputs.unshift(file);\n    this.setState({dum:100});\n  }\n\n  render() {\n    return(\n      <div>\n        <NavBar toggleDim = {this.toggleDim}/>\n        <section style={{float: 'left'}}>\n          {this.state.input_visible?\n          <div className='left-section'>\n            <div>\n              <input type='button'  onClick={this.toggle_input.bind(this)} \n                  className='toggleBtn' defaultValue='<<'/>\n              <input type='button' onClick={this.addEquation} className='rounded-right-button'\n                defaultValue='+'/>\n              <input type='button' onClick={this.removeInput} className='rounded-right-button'\n                defaultValue='-'/>\n              {!this.state.is2D?\n              <input type='button' onClick={this.addFile} className='rounded-right-button'\n                defaultValue='F+'/>:null}\n            </div>\n            <div className='input-panel'>\n              <InputPanel is2D={this.state.is2D} key={this.u_id} inputs={this.state.inputs} \n                addSlider={this.addSlider} changeSlider={this.changeSlider} \n                  removeInput={this.removeInput} updateEquation={this.updateEquation}\n                  parametricChange={this.parametricChange} updateFile={this.updateFile}/>\n            </div>\n          </div>\n          :null}\n          <section style={this.state.rightSectionStyle}>\n          {this.state.input_visible?null:\n            <input type='button'  onClick={this.toggle_input.bind(this)} \n                className='toggleBtnFixed' defaultValue='>>'/>}\n            {this.state.is2D?\n            <PlotCanvas ref={this.canvas_ref} inputs={this.state.inputs} \n            getValueArray={this.getValueArray}/>\n            :\n            <PlotSpace ref={this.canvas_ref} inputs={this.state.inputs} \n              getValueArray={this.getValueArray}/>\n            }\n          </section>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n","export const Vec2 = function(x,y){\n\tthis.x = x;\n\tthis.y = y;\n\tthis.negate = function(){\n\t\tthis.x = -this.x;\n\t\tthis.y = -this.y;\n\t}\n\tthis.add = function(v){\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t}\n\tthis.magnitude= () => {\n\t\treturn Math.sqrt(this.x*this.x + this.y*this.y );\n\t}\n\tthis.normalize = () => {\n\t\tlet mag = this.magnitude();\n\t\tthis.x /= mag;\n\t\tthis.y /= mag;\n\t}\n\tthis.scaler_multiply = (val)=>{\n\t\tthis.x *= val;\n\t\tthis.y *= val;\n\t}\n}\n\nexport const Vec3 = function(x=0,y=0,z=0){\n\tthis.x = x;\n\tthis.y = y;\n\tthis.z = z;\n\tthis.negate = function(){\n\t\tthis.x = -this.x;\n\t\tthis.y = -this.y;\n\t\tthis.z = -this.z;\n\t}\n\tthis.add = function(v){\n\t\tlet ret = new Vec3();\n\t\tret.x = this.x + v.x;\n\t\tret.y = this.y + v.y;\n\t\tret.z = this.z + v.z;\n\t\treturn ret;\n\t}\n\tthis.sub = function(v){\n\t\tlet ret = new Vec3();\n\t\tret.x = this.x - v.x;\n\t\tret.y = this.y - v.y;\n\t\tret.z = this.z - v.z;\n\t\treturn ret;\n\t}\n\tthis.magnitude= () => {\n\t\treturn Math.sqrt(this.x*this.x + this.y*this.y + this.z*this.z);\n\t}\n\tthis.normalize = () => {\n\t\tlet mag = this.magnitude();\n\t\tthis.x /= mag;\n\t\tthis.y /= mag;\n\t\tthis.z /= mag;\n\t}\n\tthis.scaler_multiply = (val)=>{\n\t\tthis.x *= val;\n\t\tthis.y *= val;\n\t\tthis.z *= val;\n\t}\n\tthis.cross = (v)=>{\n\t\tlet ret = new Vec3();\n\t\tret.x = this.y*v.z - v.y*this.z;\n\t\tret.y = v.x*this.z - this.x*v.z;\n\t\tret.z = this.x*v.y - v.x*this.y;\n\t\treturn ret;\n\t}\n\tthis.toArray = ()=>{\n\t\treturn [this.x, this.y, this.z];\n\t}\n}\n\nexport const Mat3f = function(content=null){\n\tif(content===null)\n\t\tthis.content = new Float32Array([1.0,0.0,0.0, \n\t\t\t\t\t\t\t\t\t\t 0.0,1.0,0.0, \n\t\t\t\t\t\t\t\t\t\t 0.0,0.0,1.0]);\n\telse\n\t\tthis.content = new Float32Array(content);\n\tthis.multiply = function(other){\n\t\tlet temp;\n\t\tvar res = Mat3f.getNull();\t\t\n\t\tfor(var i=0;i<3;i++){\n\t\t\ttemp = 0.0;\n\t\t\tfor(var j=0;j<3;j++){\n\t\t\t\tfor(var k=0;k<3;k++)\n\t\t\t\t\ttemp += this.content[i*3 + k] * other.content[k*3 + j];\n\t\t\t}\n\t\t\tres.content[i*3+j] = temp;\t\n\t\t}\n\t\treturn res;\n\t}\n}\n\nMat3f.getTranslate = function(tx, ty){\n\tvar mat3 = Mat3f();\t\n\tmat3.content[2] = tx;\n\tmat3.content[5] = ty;\n\treturn mat3;\n}\n\nMat3f.getRotate = function(angle){\n\tvar cos_val = Math.cos(angle);\n\tvar sin_val = Math.sin(angle);\n\tvar mat3 = Mat3f();\n\tmat3.content[0] = cos_val; mat3.content[1] = -sin_val;\n\tmat3.content[3] = sin_val; mat3.content[4] = cos_val;\n}\n\nMat3f.getNull=function(){\n\treturn Mat3f([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,]);\n}\n\nMat3f.getShear = function(shx, shy){\n\tvar mat3 = Mat3f();\n\tmat3.content[0] = shx;\n\tmat3.content[4] = shy;\n\treturn mat3;\n}\n\nexport const Mat4f = function(content=null){\n\tif(content===null)\n\t\tthis.content = new Float32Array([1.0,0.0,0.0,0.0, \n\t\t\t\t\t\t\t\t\t\t 0.0,1.0,0.0,0.0, \n\t\t\t\t\t\t\t\t\t\t 0.0,0.0,1.0,0.0,\n\t\t\t\t\t\t\t\t\t\t 0.0,0.0,0.0,1.0]);\n\telse\n\t\tthis.content = new Float32Array(content);\n\tthis.multiply = function(other){\n\t\tlet res = Mat4f.getNull();\t\n\t\tfor(let i=0;i<4;i++){\n\t\t\tfor(let j=0;j<4;j++){\n\t\t\t\tlet temp = 0.0;\n\t\t\t\tlet p = i*4;\n\t\t\t\tfor(var k=0;k<4;k++)\n\t\t\t\t\ttemp += this.content[p + k] * other.content[k*4 + j];\n\t\t\t\tres.content[p+j] = temp;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n\tthis.multiplyVec4 = function(vec){\n\t\tlet res = Array(4);\n\t\tlet arr = [vec.x,vec.y,vec.z,1];\n\t\tfor(let i=0;i<4;i++){\n\t\t\tlet temp = 0.0;\n\t\t\tlet p = i*4;\n\t\t\tfor(var k=0;k<4;k++)\n\t\t\t\ttemp += this.content[p + k] * arr[k];\n\t\t\tres[i] = temp;\n\t\t}\n\t\treturn new Vec3(res[0],res[1],res[2]);\n\t}\n\n\tthis.printToCosole = ()=>{\n\t\tfor(let i=0;i<4;i++){\n\t\t\tfor(let j=0;j<4;j++){\n\t\t\t\tprocess.stdout.write(this.content[4*i+j].toFixed(3).toString()+', ');\n\t\t\t}\n\t\t\tprocess.stdout.write('\\n');\n\t\t}\n\t}\n}\n\nMat4f.getNull=function(){\n\treturn new Mat4f([\n\t\t0.0,0.0,0.0,0.0, \n\t\t0.0,0.0,0.0,0.0, \n\t\t0.0,0.0,0.0,0.0,\n\t\t0.0,0.0,0.0,0.0]);\n}\n\nMat4f.getScale=function(sx,sy,sz){\n\treturn new Mat4f\n\t([\n\t\tsx,0.0,0.0,0.0, \n\t\t0.0,sy,0.0,0.0, \n\t\t0.0,0.0,sz,0.0,\n\t\t0.0,0.0,0.0,1.0\n\t]);\n}\n\nMat4f.getTranslate = function(v){\n\treturn new Mat4f\n\t([\n\t\t1.0,0.0,0.0,v.x, \n\t\t0.0,1.0,0.0,v.y, \n\t\t0.0,0.0,1.0,v.z,\n\t\t0.0,0.0,0.0,1.0\n\t]);\n}\n\nMat4f.getRotate = function(angle, axis){\n\tangle /= 2;\n\tlet a = Math.cos(angle);\n\n\taxis.normalize();\n\taxis.scaler_multiply(Math.sin(angle));\n\n\tlet q = new Quaternion(a,axis.x,axis.y,axis.z);\n\t\n\treturn q.get_mat();\n}\n\nMat4f.getRotateX = function(angle){\n\tlet cos = Math.cos(angle);\n\tlet sin = Math.sin(angle);\n\treturn new Mat4f([\n\t\t1.0,0.0, 0.0,0.0, \n\t\t0.0,cos,-sin,0.0, \n\t\t0.0,sin, cos,0.0,\n\t\t0.0,0.0, 0.0,1.0\n\t]);\n}\n\nMat4f.getRotateY = function(angle){\n\tlet cos = Math.cos(angle);\n\tlet sin = Math.sin(angle);\n\treturn new Mat4f([\n\t\tcos,0.0,-sin,0.0, \n\t\t0.0,1.0, 0.0,0.0, \n\t\tsin,0.0, cos,0.0,\n\t\t0.0,0.0, 0.0,1.0\n\t]);\n}\n\nMat4f.getRotateZ = function(angle){\n\tlet cos = Math.cos(angle);\n\tlet sin = Math.sin(angle);\n\treturn new Mat4f([\n\t\tcos,-sin,0.0,0.0, \n\t\tsin, cos,0.0,0.0, \n\t\t0.0, 0.0,1.0,0.0,\n\t\t0.0, 0.0,0.0,1.0\n\t]);\n}\n//width/height = aspect\nMat4f.getPresSymmetric = function(n,f, aspect, aov){\n\taov *= Math.PI/180;\n\tlet r = n*Math.tan(aov);\n\tlet t = r*aspect;\n\treturn Mat4f.getPres(-r,-t,n,r,t,f);\n}\n\nMat4f.getOrtho = function(l, b, n, r, t , f){\n\treturn new Mat4f([\n\t\t2/(r-l),       0,        0, -(r+l)/(r-l),\n\t\t\t  0, 2/(t-b),        0, -(t+b)/(t-b),\n\t\t\t  0,       0, -2/(f-n), -(f+n)/(f-n),\n\t\t\t  0,       0,        0,            1,\n\t]);\n}\n\nMat4f.getOrthoSymmetric = function(h,aspect=1){\n\tlet m = h*aspect;\n\treturn Mat4f.getOrtho(-h,-m,-h, h,m,h);\n}\n\nMat4f.getPres = function(l,b,n,r,t,f){\n\treturn new Mat4f([\n\t\t2*n/(r-l),         0,  (r+l)/(r-l),            0,\n\t\t\t\t0, 2*n/(t-b),  (t+b)/(t-b),            0,\n\t\t\t\t0,         0, -(f+n)/(f-n), -2*f*n/(f-n),\n\t\t\t\t0,         0,          -1,             0,\n\t]);\n}\n\nexport const Cam = class{\n\tconstructor(target, position, up){\n\n\t\tthis.target = target;\n\t\tthis.f = position.sub(target);\n\t\tthis.f.normalize();// Direction of Camera\n\t\t\n\t\tthis.s = this.f.cross(up);//S-Axis of Camera Plane\n\t\tthis.s.normalize();\n\n\t\tthis.position = position;\n\n\t\tthis.v = this.f.cross(this.s);//V-Axis of Camera Plane\n\t\tthis.createMatrix();\n\t}\n\n\tcreateMatrix(){\n\t\tthis.mat = new Mat4f([\n\t\t\tthis.s.x,this.s.y,this.s.z,-this.position.x,\n\t\t\tthis.v.x,this.v.y,this.v.z,-this.position.y,\n\t\t\tthis.f.x,this.f.y,this.f.z,-this.position.z,\n\t\t\t0.0,0.0,0.0, 1.0\n\t\t]);\n\t}\n\n\tyaw = (angle)=>{\n\t\t//Rotate about V-axis\n\t\tlet v = new Vec3(this.mat.content[4],this.mat.content[5],this.mat.content[6]);\n\t\tlet rot_mat = Mat4f.getRotate(angle, v);\n\t\tthis.mat = rot_mat.multiply(this.mat);\n\t\t//console.log(`${this.mat.content[8]},${this.mat.content[9]},${this.mat.content[10]}`)\n\t}\n\tpitch = (angle)=>{\n\t\t//Rotate about S-axis\n\t\tlet v = new Vec3(this.mat.content[0],this.mat.content[1],this.mat.content[2]);\n\t\tlet rot_mat = Mat4f.getRotate(angle, v);\n\t\t// console.log(rot_mat);\n\t\tthis.mat = rot_mat.multiply(this.mat);\n\t}\n\troll = (angle)=>{\n\t\t//Rotate about Normal to plane\n\t\tlet v = new Vec3(this.mat.content[8],this.mat.content[9],this.mat.content[10]);\n\t\tlet rot_mat = Mat4f.getRotate(angle, v);\n\t\t// console.log(rot_mat);\n\t\tthis.mat = rot_mat.multiply(this.mat);\n\t}\n\trotateX = (angle)=>{\n\t\t// let axis_of_rot = this.f.cross(this.v);\n\t\t// let rot_mat = Mat4f.getRotate(angle,axis_of_rot);\n\t\t// this.f = rot_mat.multiplyVec4(this.f);\n\t\t// this.s = rot_mat.multiplyVec4(this.s);\n\t\t// this.v = rot_mat.multiplyVec4(this.v);\n\t\t// this.position = rot_mat.multiplyVec4(this.position);\n\t\t// this.createMatrix()\n\t\t// console.log(this.f);\n\t\tlet new_vec = new Vec3(this.s.x,this.s.y,this.s.z);\n\t\tlet rot_mat = Mat4f.getRotate(angle,new_vec);\n\t\tthis.position = rot_mat.multiplyVec4(this.position);\n\t\tthis.mat = this.mat.multiply(rot_mat);\n\t}\n\trotateZ = (angle)=>{\n\t\tlet rot_mat = Mat4f.getRotateZ(angle);\n\t\tlet rot_mats = Mat4f.getRotateZ(-angle);\n\t\tthis.s = rot_mats.multiplyVec4(this.s);\n\t\tthis.position = rot_mat.multiplyVec4(this.position);\n\t\tthis.mat = this.mat.multiply(rot_mat);\n\t}\n\trotateY = (angle)=>{\n\t\tlet rot_mat = Mat4f.getRotateY(angle);\n\t\tthis.mat = rot_mat.multiply(this.mat);\n\t}\n\tzoom = (fac=1)=>{\n\t\tlet t_m = Mat4f.getScale(fac,fac,fac);\n\t\tthis.mat = this.mat.multiply(t_m);\n\t}\n\tdispTarget = (val)=>{\n\t\tlet f = new Vec3(this.mat.content[8],this.mat.content[9],this.mat.content[10]);\n\t\tf.scaler_multiply(val);\n\t\t// this.position = new Vec3(this.mat.content[3], this.mat.content[7], this.mat.content[11]);\n\t\tthis.mat.content[3] += f.x;\n\t\tthis.mat.content[7] += f.y;\n\t\tthis.mat.content[11] += f.z;\n\t}\n}\n\nexport const Quaternion = function(a, x,y,z){\n\t\n\tthis.a = a;\n\tthis.x = x;\n\tthis.y = y;\n\tthis.z = z;\n\t\n\tthis.get_mat = ()=> {\n\t\tlet qx = this.x, qy = this.y, qz = this.z, qw = this.a;\n\t\tlet qx2 = qx*qx, qy2 = qy*qy, qz2 = qz*qz;\n\t\treturn new Mat4f([\n\t\t\t1 - 2*qy2 - 2*qz2,\t2*qx*qy - 2*qz*qw,\t2*qx*qz + 2*qy*qw,0,\n\t\t\t2*qx*qy + 2*qz*qw,\t1 - 2*qx2 - 2*qz2,\t2*qy*qz - 2*qx*qw,0,\n\t\t\t2*qx*qz - 2*qy*qw,\t2*qy*qz + 2*qx*qw,\t1 - 2*qx2 - 2*qy2,0,\n\t\t\t\t\t\t\t0,\t\t\t\t\t0,\t\t\t\t\t0,1\n\t\t]);\n\t}\n\n\tthis.mag = ()=>{\n\t\treturn Math.sqrt(this.a*this.a+this.x*this.x+this.y*this.y+this.z*this.z);\n\t}\n\n\tthis.normalize = () =>{\n\t\tlet m = this.mag();\n\t\tthis.a /=m;\n\t\tthis.x /=m;\n\t\tthis.y /=m;\n\t\tthis.z /=m;\n\t}\n}\n\nclass Complex{\n\tconstructor(x=0,y=0){\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\tadd(n){\n\t\treturn new Complex(n.x+this.x, n.y+this.y);\n\t}\n\tsub(n){\n\t\treturn new Complex(this.x-n.x,this.y-n.y);\n\t}\n\tmul(n){\n\t\treturn new Complex(this.x*n.x-this.y*n.y, this.x*n.y+this.y*n.x);\n\t}\n\tangle(){\n\t\treturn Math.atan(this.y/this.x);\n\t}\n\tmag(){\n\t\treturn Math.sqrt(this.x*this.x+this.y*this.y);\n\t}\n\tdiv(n){\n\t\tlet mag = n.x*n.x + n.y*n.y;\n\t\treturn new Complex((this.x*n.x+this.y*n.y)/mag, (this.y*n.x-this.x*n.y)/mag);\n\t}\n\tlog(){\n\t\treturn new Complex(Math.log(this.mag()),this.angle());\n\t}\n\tpow(n){\n\t\tlet w = (this.log());\n\t\tif(Number.isNaN(w.y)){\n\t\t\treturn new Complex(0,0);\n\t\t}\n\t\tw = w.mul(n);\n\t\tlet r_n = Math.exp(w.x);\n\t\treturn new Complex(r_n*Math.cos(w.y),r_n*Math.sin(w.y));\n\t}\n}\n\n// (Mat4f.getRotate(0.1,new Vec3(1,1,1))).printToCosole();\n// module.exports = Vec3;","import { Vec3 } from \"./math\";\n\nclass Symbol{\n    \n}\n\nSymbol.insertMultiply= function(expression){\n\n}\n\nSymbol.draw2D = function(canvas, f, inf, val, threshold=0.000001){\n    if(f.type==='explicit'){\n        Symbol.draw2DExplicit(canvas,f,inf,val);\n    }else if(f.type==='parametric'){\n        Symbol.draw2DParametric(canvas,f,inf,val);\n    }else if(f.type==='implicit'){\n        Symbol.draw2DUsingTracing(canvas,f,inf,val);\n    }\n}\n\nSymbol.draw2DExplicit = function(canvas, f, inf, val){\n    if(f.expliciton==='y'){\n        let x_index = f.parm.indexOf('x');\n\n        if(x_index===-1){\n            let const_y = inf.py_center-f.f(val)*inf.RTPY;\n            canvas.beginPath();\n            canvas.moveTo(0,const_y);\n            canvas.lineTo(inf.width,const_y);\n            canvas.stroke();\n            return;\n        }\n\n        let step = (inf.right-inf.left)/2000;\n\n        val[x_index] = inf.left;\n        let lx = inf.px_center + val[x_index]*inf.RTPX;\n        let ly = inf.py_center-f.f(val)*inf.RTPY;\n\n        for(let i=0;i<2000;i++){\n            val[x_index] = inf.left + i*step;\n            // console.log(`(${lx},${ly})`);\n            canvas.beginPath();\n            canvas.moveTo(lx,ly);\n            lx = inf.px_center+val[x_index]*inf.RTPX\n            ly = inf.py_center-f.f(val)*inf.RTPY;\n            canvas.lineTo(lx,ly);\n            canvas.stroke();   \n        }\n    }else{\n        let y_index = f.parm.indexOf('y');\n        \n        if(y_index===-1){\n            let const_x = inf.px_center + f.f(val)*inf.RTPX;\n            canvas.beginPath();\n            canvas.moveTo(const_x,0);\n            canvas.lineTo(const_x,inf.width);\n            canvas.stroke();\n            return;\n        }\n        \n        let step = (inf.top-inf.bottom)/2000;\n\n        val[y_index] = inf.bottom;\n        let lx = inf.px_center + f.f(val)*inf.RTPX;\n        let ly = inf.py_center-val[y_index]*inf.RTPY;\n\n        for(let i=0;i<2000;i++){\n            val[y_index] = inf.bottom + i*step;\n            // console.log(`(${lx},${ly})`);\n            canvas.beginPath();\n            canvas.moveTo(lx,ly);\n            lx = inf.px_center + f.f(val)*inf.RTPX;\n            ly = inf.py_center-val[y_index]*inf.RTPY;\n            canvas.lineTo(lx,ly); \n            canvas.stroke();   \n        }\n    }\n\n}\n\nSymbol.draw2DParametric = function(canvas, f, inf, val){\n    //Get the values\n    let val_x = Array.from(f.fx.parm.length);\n    let val_y = Array.from(f.fy.parm.length);\n    for(let j=0;j<f.parm.length;j++){\n        let i = f.fx.parm.indexOf(f.parm[j]);\n        if(i!==-1)\n            val_x[i] = val[j];\n        i = f.fy.parm.indexOf(f.parm[j]);\n        if(i!==-1)\n            val_y[i] = val[j];\n    }\n\n    let t_index_x = f.fx.parm.indexOf('t');\n    let t_index_y = f.fy.parm.indexOf('t');\n\n    //Plot only one point\n    if(t_index_x===-1&&t_index_y===-1){\n        let x = inf.px_center + f.fx.f(val_x)*inf.RTPX;\n        let y = inf.py_center-f.fy.f(val_y)*inf.RTPY;\n        canvas.beginPath();\n        canvas.arc(x,y,2,0,2*Math.PI,false);\n        canvas.fillStyle = canvas.strokeStyle;\n        canvas.fill();\n        canvas.stroke();\n    }else if(t_index_x===-1&&t_index_y!==-1){\n        let x = inf.px_center + f.fx.f(val_x)*inf.RTPX;\n        val_y[t_index_y] = f.min;\n        let y = inf.py_center-f.fy.f(val_y)*inf.RTPY;\n        let step = (f.max-f.min)/100;\n        for(let i=1;i<=100;i++){\n            val_y[t_index_y] = f.min + i*step;\n            canvas.beginPath();\n            canvas.moveTo(x,y);\n            y = inf.py_center-f.fy.f(val_y)*inf.RTPY;\n            canvas.lineTo(x,y);\n            canvas.stroke();\n        }\n    }else if(t_index_x!==-1&&t_index_y===-1){\n        let y = inf.py_center-f.fy.f(val_y)*inf.RTPY;\n        val_x[t_index_x] = f.min;\n        let x = inf.px_center + f.fx.f(val_x)*inf.RTPX;\n        let step = (f.max-f.min)/100;\n        for(let i=1;i<=100;i++){\n            val_x[t_index_x] = f.min + i*step;\n            canvas.beginPath();\n            canvas.moveTo(x,y);\n            x = inf.px_center + f.fx.f(val_x)*inf.RTPX;\n            canvas.lineTo(x,y);\n            canvas.stroke();\n        }\n    }else{\n        val_y[t_index_y] = f.min;\n        let y = inf.py_center-f.fy.f(val_y)*inf.RTPY;\n        val_x[t_index_x] = f.min;\n        let x = inf.px_center + f.fx.f(val_x)*inf.RTPX;\n        let step = (f.max-f.min)/100;\n        for(let i=1;i<=100;i++){\n            val_y[t_index_y]=val_x[t_index_x]=f.min + i*step;\n            canvas.beginPath();\n            canvas.moveTo(x,y);\n            x = inf.px_center + f.fx.f(val_x)*inf.RTPX;\n            y = inf.py_center-f.fy.f(val_y)*inf.RTPY;\n            canvas.lineTo(x,y);\n            canvas.stroke();\n        } \n    }\n\n}\n\n//Does all the job of identifying type and giving appropriate function(s)\nSymbol.getJSFunction = function(expression,is3D=false){\n    if(expression.length===0)\n        return null;\n\n    expression = expression.toLowerCase();\n    expression = expression.replace(/\\s/ig,'');\n\n    console.log(expression);\n\n    //Check for Parametric\n    if(expression[0]==='('){\n        if(expression[expression.length-1]!==')')\n            return null;\n        expression = expression.substr(1,expression.length-2);\n        let splitedExpressions = expression.split(',');\n        let funct = {type:'parametric'};\n        try{\n            funct.parm = [];\n            if(is3D){\n                if(splitedExpressions.length!==3)\n                    return null;\n                let fzp = Symbol.getFunction(splitedExpressions[2]);\n                funct.fz = fzp;\n                funct.parm = fzp.parm.concat(funct.parm);\n            }else if(splitedExpressions.length!==2){\n                return null;\n            }\n            let fxp = Symbol.getFunction(splitedExpressions[0]);\n            let fyp = Symbol.getFunction(splitedExpressions[1]);\n            funct.fx = fxp;\n            funct.fy = fyp;\n            funct.parm = fxp.parm.concat(funct.parm);\n            funct.parm = fyp.parm.concat(funct.parm);\n            funct.parm = Array.from(new Set(funct.parm));\n            if(is3D){\n                funct.u = {min:0, max:1};\n                funct.v = {min:0, max:1};\n            }else{\n                funct.min = 0;\n                funct.max = 1;\n            }\n            return funct;\n        }\n        catch(e){\n            console.log(\"Error at parsing\");\n            return null;\n        }\n    }\n    \n    let expl_checker;\n    if(is3D)\n        expl_checker = Symbol.isExplicitOn(expression,['x','y','z']);\n    else\n        expl_checker = Symbol.isExplicitOn(expression,['y','x']);\n\n    //Check for Explicit\n    if(expl_checker!==null){\n        let fp = null;\n        try{\n            fp = Symbol.getFunction(expl_checker.expression);\n        }catch(e){  \n            console.log(\"Error\");\n            return null;\n        }\n\n        return {type:'explicit', expliciton:expl_checker.expliciton, f:fp.f, parm:fp.parm}\n    }\n    else{\n        let a = expression.search('=');\n        if(a===-1)\n            return null;\n        expression = expression.substr(0,a) + '-(' + expression.substr(a+1,expression.length-1)+')';\n        console.log(expression);\n        let fp = null;\n        try{\n            fp = Symbol.getFunction(expression);\n        }catch(e){  console.log(\"Error\");return null}\n        return {type:'implicit', f: fp.f,parm:fp.parm};\n    }\n}\n\nSymbol.isExplicitOn = function(expression, variables){\n    for(let i=0;i<variables.length;i++){\n        let what = variables[i];\n        let match =  (expression.match(new RegExp(what,'g')));\n        \n        if(match===null||match.length>1)\n            continue;\n\n        if(expression[expression.length-1]===what&&expression[expression.length-2]==='='){\n            expression = expression.substring(0,expression.length-2);\n            return {expression:expression, expliciton: what};\n        }\n        if(expression[0]===what&&expression[1]==='='){\n            expression = expression.substring(2,expression.length);\n            return {expression:expression, expliciton: what};\n        }\n    }\n    return null;\n}\n\nSymbol.getFunction = function (expression){\n    let fn = [];\n    let parm = [];\n    let prev_alpha = false;\n    let char ='';\n    let func_str ='';\n\n    for(let i=0;i<expression.length;i++){\n        char = expression[i];\n        if(prev_alpha===true){\n            func_str += char;\n            if(expression[i+1]<'a'||expression[i+1]>'z'||i+1>=expression.length){\n                fn.push(\"Math.\"+func_str);\n                prev_alpha = false;\n            }\n        }else if(char>='a'&&char<='z'){\n            if(expression[i+1]<'a'||expression[i+1]>'z'||i+1>=expression.length){\n                parm.push(char);\n                fn.push(char);\n            }else{\n                prev_alpha = true;\n                func_str = char;\n            }\n        }else\n            fn.push(char);\n    }\n    func_str = '(____val)=>{return ';\n\n    parm = Array.from(new Set(parm));\n    parm.sort();\n    \n    for(let i=0;i<parm.length;i++){\n        fn = fn.map((s)=>{\n            if(s===parm[i])\n                return '____val[' + i.toString() +']';\n            return s;\n        })\n    }\n\n    for(let i=0;i<fn.length;i++){\n        func_str += fn[i];\n    }\n \n    func_str += ';}';\n\n    let f;\n    try{\n        f =  eval(func_str);\n        return {f: f, parm:parm};\n    }catch(e){\n        return null;\n    }\n\n}\n\nSymbol.draw2DUsingSecant = function (canvas, fp, inf, val){\n    \n    let x_ind,y_ind;\n    let step = (inf.right-inf.left)/100;\n    let threshold = step/1000;\n\n    x_ind = fp.parm.length-2;\n    y_ind = fp.parm.length-1;\n\n    val[x_ind] = inf.left;\n    inf.height  /=2;\n    inf.width /=2;\n\n\n    let a=-1,b=1,c,fa,fb;\n    let lx,ly;\n\n    while(Math.abs(a-b)>threshold){\n        val[y_ind] = a;\n        fa = fp.f(val);\n        val[y_ind] = b;\n        fb = fp.f(val);\n        c = (a*fb-b*fa)/(fb-fa);\n        a = b; b = c;\n        if(Number.isNaN(c))\n            a=b=1;\n    }\n\n    lx = inf.px_center+val[x_ind]*inf.RTPX;\n    ly = inf.py_center-c*inf.RTPY;\n    val[x_ind] += step;\n\n    while(val[x_ind]<inf.right){\n        a=val[x_ind];b=a+2;\n        while(Math.abs(a-b)>threshold){\n            val[y_ind] = a;\n            fa = fp.f(val);\n            val[y_ind] = b;\n            fb = fp.f(val);\n            c = (a*fb-b*fa)/(fb-fa);\n            a = b; b = c;\n            if(Number.isNaN(c))\n                a=b=1;\n        }\n        \n        if(!Number.isNaN(c)){\n            canvas.beginPath();\n            canvas.moveTo(lx,ly);\n            lx = inf.px_center+val[x_ind]*inf.RTPX\n            ly = inf.py_center-c*inf.RTPY;\n            canvas.lineTo(lx,ly);\n            canvas.stroke();\n        }\n        val[x_ind] += step;\n    }\n}\n\nSymbol.draw2DUsingAdaptiveTracing = function(canvas, fp, inf, val, threshold = 0.000001){\n    \n}\n\nSymbol.draw2DUsingTracing = function(canvas, fp, inf, val, threshold = 0.00001){\n    const del = (inf.right-inf.left)/(10e5);\n    \n    let x_ind = fp.parm.indexOf('x');\n    let y_ind = fp.parm.indexOf('y');\n\n    if(x_ind===-1||y_ind===-1)\n        return;\n\n    let step = (inf.right-inf.left)/100;\n    if(step>0.1)\n        step = 0.1;\n    let q_step = (inf.right-inf.left)/5;\n\n    let l = inf.left+q_step, b = inf.bottom+q_step;\n    for(;l<inf.right;l+=q_step){\n         b = inf.bottom;\n         for(;b<inf.top;b+=q_step){\n            let a = Symbol.pointAlgorithm(l,b,fp,val,del,x_ind,y_ind,threshold);\n            if(a==null){\n                continue;\n            }\n            let m = Symbol.trace(step, a.x,a.y,canvas,fp,inf,val,del,x_ind,y_ind,threshold);\n            // console.log(a);\n            if(m===true)\n                return;\n            else{\n                // console.log(\"Found\");\n                //console.log(a);\n                m = Symbol.trace(step, a.x,a.y,canvas,fp,inf,val,del,x_ind,y_ind,threshold,true);\n            }\n        }\n    }\n}\n\nSymbol.trace = function(step, sx, sy, canvas, fp, inf, v, del,x_ind,y_ind,threshold,reverse=false){\n    let F=0, Fx=0, Fy=0, Fac=0;\n    let psx=inf.px_center+sx*inf.RTPX;\n    let psy=inf.py_center-sy*inf.RTPY;\n    \n    let val = Array.from(v);\n    let osx=sx, osy=sx;\n\n    let slope;\n    let dx=0, dy=0;\n    let vx,vy,mag,angle_of_rotation = 0;\n\n    //Assumes sx, sy already lies in the curve\n    //First Step:\n    \n    val[x_ind] = sx + del;\n    val[y_ind] = sy;\n    Fx = (fp.f(val)-F)/del;\n\n    if(Number.isNaN(Fx))\n        return null;\n\n    val[x_ind] = sx;\n    val[y_ind] = sy + del;\n    Fy = (fp.f(val)-F)/del;\n    \n    slope = -Fx/Fy;\n    mag = Math.sqrt(1+slope*slope);\n    \n    vx = 1/mag;\n    vy = slope/mag;\n\n    \n\n    // console.log(`ovx: ${ovx}, ovy: ${ovy}`);\n\n    let count = 1000;\n    canvas.fillRect(psx,psy,5,5);\n\n    while(count>0){\n        count--;\n        if(reverse===true){\n            sx -= step*vx;\n            sy -= step*vy;\n        }else{\n            sx += step*vx;\n            sy += step*vy;\n        }\n        let v_count = 100;\n        //Point Algorithm\n        while(v_count>0){\n            v_count--;\n            val[x_ind] = sx;\n            val[y_ind] = sy;\n            F = fp.f(val);\n\n            if(Number.isNaN(F))\n                return null;\n            \n            val[x_ind] = sx + del;\n            Fx = (fp.f(val)-F)/del;\n\n            val[x_ind] = sx;\n            val[y_ind] = sy + del;\n            Fy = (fp.f(val)-F)/del;\n\n            Fac = F/(Fx*Fx+Fy*Fy);\n            \n            // console.log(`${sx.toFixed(3)}\\t${sy.toFixed(3)}\\t${F.toFixed(3)}\\t${Fx.toFixed(3)}\\t${Fy.toFixed(3)}\\t${dx.toFixed(3)}\\t${dy.toFixed(3)}\\t`)\n\n            dx = Fac*Fx;\n            dy = Fac*Fy;\n\n            sx -= dx;\n            sy -= dy;\n\n            if(Math.sqrt(dx*dx+dy*dy)<threshold)\n                break;\n        }\n        \n        // console.log({sx,sy});\n\n        canvas.beginPath();\n        canvas.moveTo(psx,psy);\n        psx=inf.px_center+sx*inf.RTPX;\n        psy=inf.py_center-sy*inf.RTPY;\n        canvas.lineTo(psx,psy);\n        canvas.stroke();\n        \n        slope = -Fx/Fy;\n\n        mag = Math.sqrt(1+slope*slope);\n\n        angle_of_rotation += Math.acos((vx+slope*vy)/mag);\n\n        if(vx+slope*vy>0){\n            vx = 1/mag;\n            vy = slope/mag;\n        }else{\n            vx = -1/mag;\n            vy = -slope/mag;\n            //console.log({vx,vy});\n        }\n\n        //Check for initial\n        if(angle_of_rotation>180){\n            // console.log(\"Angle of rotation: \"+angle_of_rotation.toString());\n            dx = osx - sx;\n            dy = osy - sy;\n            //console.log(Math.sqrt(dx*dx + dy*dy));\n            if(Math.sqrt(dx*dx + dy*dy)<5*step){\n               // console.log('Returned due to start');\n                return true;\n            }\n            angle_of_rotation -= 180;\n        }\n\n        //Check for the boundaries crucial for curves like hyperbola\n        if(sx<inf.left||sx>inf.right){\n            // console.log(`Returned due to ${sx<inf.left?\"sx<left\":\"sx>right\"}`);\n            return false;\n        }\n\n        if(sy<inf.bottom||sy>inf.top){\n            // console.log(`Returned due to ${sy<inf.bottom?\"sy<bottom\":\"sy>top\"}`);\n            return false;\n        }\n    }\n}\n\nSymbol.pointAlgorithm = function(sx, sy, fp, val, del, x_ind, y_ind, threshold=0.00001){\n    let F=0, Fx=0, Fy=0, Fac=0;\n    let dx=0, dy=0;\n    \n    let count = 100;\n    while(count>0){\n        count--;\n        val[x_ind] = sx;\n        val[y_ind] = sy;\n        F = fp.f(val);\n\n        if(Number.isNaN(F))\n            return null;\n        \n        val[x_ind] = sx + del;\n        Fx = (fp.f(val)-F)/del;\n\n        val[x_ind] = sx;\n        val[y_ind] = sy + del;\n        Fy = (fp.f(val)-F)/del;\n\n        Fac = F/(Fx*Fx+Fy*Fy);\n        \n        // console.log(`${sx.toFixed(3)}\\t${sy.toFixed(3)}\\t${F.toFixed(3)}\\t${Fx.toFixed(3)}\\t${Fy.toFixed(3)}\\t${dx.toFixed(3)}\\t${dy.toFixed(3)}\\t`)\n\n        dx = Fac*Fx;\n        dy = Fac*Fy;\n\n        sx -= dx;\n        sy -= dy;\n\n        if(Math.sqrt(dx*dx+dy*dy)<threshold)\n            break;\n    }\n    return {x:sx,y:sy};\n   \n}\n\nSymbol.get3DMesh = function(fp, val, size){\n    if(fp.type==='explicit'){\n        return Symbol.get3DMeshForExplicit(fp, val, size);\n    }else if(fp.type==='parametric'){\n        return Symbol.get3DMeshForParametric(fp,val);\n    }\n}\n\nSymbol.get3DMeshForExplicit = function(fp, val, size, count=50,del=10e-7){\n    let step = size/count;\n    let v3=0,v1,v1del;\n    \n    let v1_ind=0,v2_ind=0;\n\n    let ret_arr = [];\n    if(fp.expliciton==='z'){\n        v1_ind = fp.parm.indexOf('x');\n        v2_ind = fp.parm.indexOf('y');\n        for(let i=-count;i<=count;i++){\n            v1 = i*step; v1del = v1 + del;\n            for(let j=-count;j<count;j++){\n                val[v1_ind] = v1;\n                val[v2_ind] = j*step;\n                v3 = fp.f(val);\n                ret_arr.push(val[v1_ind]);\n                ret_arr.push(val[v2_ind]);\n                ret_arr.push(v3);\n                \n                //df/dx\n                val[v1_ind] = v1del;  \n                ret_arr.push((fp.f(val) - v3)/del);\n\n                //df/dy\n                val[v1_ind] = v1;\n                val[v2_ind] += del;\n                ret_arr.push((fp.f(val)-v3)/del);\n\n                //df/dz = -1\n                ret_arr.push(-1);\n            }\n        }\n    }else if(fp.expliciton==='y'){\n        v1_ind = fp.parm.indexOf('x');\n        v2_ind = fp.parm.indexOf('z');\n        for(let i=-count;i<=count;i++){\n            v1 = i*step; v1del = v1 + del;\n            for(let j=-count;j<count;j++){\n                val[v1_ind] = v1;\n                val[v2_ind] = j*step;\n                v3 = fp.f(val);\n                ret_arr.push(val[v1_ind]);\n                ret_arr.push(v3);\n                ret_arr.push(val[v2_ind]);\n\n                //df/dx\n                val[v1_ind] = v1del;  \n                ret_arr.push((fp.f(val) - v3)/del);\n\n                //df/dy = -1\n                ret_arr.push(-1);\n                \n                //df/dz\n                val[v1_ind] = v1;\n                val[v2_ind] += del;\n                ret_arr.push((fp.f(val)-v3)/del);\n\n            }\n        }\n    }else if(fp.expliciton==='x'){\n        v1_ind = fp.parm.indexOf('y');\n        v2_ind = fp.parm.indexOf('z');\n        for(let i=-count;i<=count;i++){\n            v1 = i*step; v1del = v1 + del;\n            for(let j=-count;j<count;j++){\n                val[v1_ind] = v1;\n                val[v2_ind] = j*step;\n                v3 = fp.f(val);\n                ret_arr.push(v3);\n                ret_arr.push(val[v1_ind]);\n                ret_arr.push(val[v2_ind]);\n\n                //df/dx = -1\n                ret_arr.push(-1);\n                \n                //df/dy\n                val[v1_ind] = v1del;  \n                ret_arr.push((fp.f(val) - v3)/del);\n\n                \n                //df/dz\n                val[v1_ind] = v1;\n                val[v2_ind] += del;\n                ret_arr.push((fp.f(val)-v3)/del);\n            }\n        }\n    }else\n        return null;\n    return {vertices:ret_arr,indices:this.getIndicesFor(count)};\n}\n\n\nSymbol.getIndicesFor = function(count){\n    count = 2*count;\n    let indices = [];\n    for(let j=0;j<count-1;j++){\n        let m = j*count;\n        for(let i=0;i<count;i++){\n            indices.push(m+i);\n            indices.push(m+i+1);\n            indices.push(m+i+1+count);\n\n            indices.push(m+i+1);\n            indices.push(m+i+1+count);\n            indices.push(m+i+count+2);\n        }\n    }\n    return indices;\n}\n\nSymbol.get3DMeshForParametric = function(fp,val,count=50,del=10e-8){\n    // console.log(fp);\n    //One Function for every thing\n    let x_u_index = fp.fx.parm.indexOf('u');\n    let x_v_index = fp.fx.parm.indexOf('v');\n\n    let y_u_index = fp.fy.parm.indexOf('u');\n    let y_v_index = fp.fy.parm.indexOf('v');\n\n    let z_u_index = fp.fz.parm.indexOf('u');\n    let z_v_index = fp.fz.parm.indexOf('v');\n\n    let u_step = (fp.u.max-fp.u.min)/count;\n    let v_step = (fp.v.max-fp.v.min)/count;\n    console.log({\n        x_u_index:x_u_index,\n        x_v_index:x_v_index,\n        y_u_index:y_u_index,\n        y_v_index:y_v_index,\n        z_u_index:z_u_index,\n        z_v_index:z_v_index,\n    });\n    let u = 0, v=0,u_del, v_del, c_x, c_y, c_z;\n    let dr_du, dr_dv;\n\n    //Generate value array for all functions\n    let val_x = [];\n    let val_y = [];\n    let val_z = [];\n\n    for(let i=0;i<fp.parm.length;i++){\n        let parm = fp.parm[i];\n        val_x[fp.fx.parm.indexOf(parm)] = val[i];\n        val_y[fp.fy.parm.indexOf(parm)] = val[i];\n        val_z[fp.fz.parm.indexOf(parm)] = val[i];\n    }\n\n    let vertices = [];\n    //Generate Mesh\n    for(let i=0;i<count;i++){\n        u = fp.u.min + i*u_step;\n        u_del = u+del; \n        val_x[x_u_index] = u;\n        val_y[y_u_index] = u;\n        val_z[z_u_index] = u;\n        for(let j=0;j<=count;j++){\n            \n            v = fp.v.min + j*v_step;\n            v_del = v+del;\n\n            val_x[x_v_index] = v;\n            val_y[y_v_index] = v;\n            val_z[z_v_index] = v;\n\n            //One of the most inefficient way to find gradients\n            c_x = fp.fx.f(val_x);\n            c_y = fp.fy.f(val_y);\n            c_z = fp.fz.f(val_z);\n\n            //Push the points\n            vertices.push(c_x);\n            vertices.push(c_y);\n            vertices.push(c_z);\n\n            //Here do the normals\n            //dr/du\n            val_x[x_u_index] = u_del;\n            val_y[y_u_index] = u_del;\n            val_z[z_u_index] = u_del;\n            dr_du = new Vec3((fp.fx.f(val_x)-c_x)/del,(fp.fy.f(val_y)-c_x)/del,(fp.fy.f(val_y)-c_x)/del);\n            \n            //dr/dv\n            val_x[x_u_index] = u;\n            val_y[y_u_index] = u;\n            val_z[z_u_index] = u;\n\n            val_x[x_v_index] = v_del;\n            val_y[y_v_index] = v_del;\n            val_z[z_v_index] = v_del;\n\n            dr_dv = new Vec3((fp.fx.f(val_x)-c_x)/del,(fp.fy.f(val_y)-c_x)/del,(fp.fy.f(val_y)-c_x)/del);\n            dr_du = dr_du.cross(dr_dv);\n\n            //Push the normals\n            vertices.push(dr_du.x);\n            vertices.push(dr_du.y);\n            vertices.push(dr_du.z);\n        }\n    }\n    return {vertices:vertices, indices:Symbol.getIndicesFor(count/2)};\n}\n\n// let fpa = Symbol.getJSFunction('x*x + y*y = 1');\n// console.log(fpa.f([-1.25,-1.25]))\n// let infa = {\n//     left:-1.25,\n//     right:+1.25,\n//     top:+1.25,\n//     bottom:-1.25,\n//     px_center:0,\n//     py_center:0,\n//     width:100,\n//     height:100,\n//     RTPX:1,\n//     RTPY:1,\n// }\n// Symbol.draw2DUsingTracing(null,fpa,infa,[0,0]);\n// pow(x*x-y*y,2)- pow(x*x+y*y,4)=0\n\nexport default Symbol;\n//  let f = Symbol.getJSFunction('x=y*y+z*z',true);\n//  console.log(f.fz.f([2,3]));\n// // console.log(f.fp.f([1,-1.25]));\n// // console.log(Symbol.draw2DExplicit(null,f,infa,[1,0]));\n// // console.log(Symbol.getJSFunction('(u,v,u+v)',true));\n// console.log(Symbol.get3DMesh(f,[0,0],1));\n// (sin(u)*cos(v),sin(u)*sin(v),cos(u))\n// (0.1*cos(u),0.1*sin(u),v)\n// (v*cos(u),v*sin(u),1+v)"],"sourceRoot":""}